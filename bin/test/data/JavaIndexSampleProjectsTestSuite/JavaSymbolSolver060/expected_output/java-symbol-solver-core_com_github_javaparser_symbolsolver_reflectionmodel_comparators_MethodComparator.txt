FILE: MethodComparator.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel.comparators [MethodComparator.java <1:60 1:70>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel [MethodComparator.java <1:44 1:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel
QUALIFIER: com.github.javaparser.symbolsolver [MethodComparator.java <1:31 1:42>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [MethodComparator.java <1:20 1:29>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [MethodComparator.java <1:13 1:18>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [MethodComparator.java <1:9 1:11>]
SYMBOL_PACKAGE: com
QUALIFIER: java.lang [MethodComparator.java <3:13 3:16>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [MethodComparator.java <3:8 3:11>]
QUALIFIER: java [MethodComparator.java <4:8 4:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.lang.reflect [MethodComparator.java <3:18 3:24>]
SYMBOL_PACKAGE: java.lang.reflect
QUALIFIER: java.util [MethodComparator.java <4:13 4:16>]
SYMBOL_PACKAGE: java.util
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator [MethodComparator.java <9:1 <9:14 9:29> 25:1>]
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) [MethodComparator.java <11:5 <11:5 <12:16 12:22> 12:44> 24:5>]
SYMBOL_METHOD: int java.util.Comparator<T>.compare(java.util.Comparator<T>.T, java.util.Comparator<T>.T)
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int java.lang.String.compareTo(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.reflect.Method.getName()
SYMBOL_METHOD: int java.lang.reflect.Method.getParameterCount()
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.ParameterComparator.compare(java.lang.reflect.Parameter, java.lang.reflect.Parameter)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.comparators.ParameterComparator.ParameterComparator()
SYMBOL_METHOD: java.lang.reflect.Parameter java.lang.reflect.Executable.getParameters()
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator.compare(java.lang.Class<?>, java.lang.Class<?>)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator.ClassComparator()
SYMBOL_METHOD: java.lang.Class<?> java.lang.reflect.Method.getReturnType()
REFERENCE_IMPORT: MethodComparator.java -> java.lang.reflect.Method [MethodComparator.java <3:26 3:31>]
REFERENCE_IMPORT: MethodComparator.java -> java.util.Comparator<T> [MethodComparator.java <4:18 4:27>]
REFERENCE_TYPE_ARGUMENT: java.util.Comparator<T> -> java.lang.reflect.Method [MethodComparator.java <9:53 9:58>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator -> java.util.Comparator<T> [MethodComparator.java <9:42 9:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator -> java.lang.reflect.Method [MethodComparator.java <9:53 9:58>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int java.util.Comparator<T>.compare(java.util.Comparator<T>.T, java.util.Comparator<T>.T) [MethodComparator.java <12:16 12:22>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.Override [MethodComparator.java <11:6 11:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int [MethodComparator.java <12:12 12:14>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int [MethodComparator.java <13:9 13:11>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int [MethodComparator.java <15:9 15:11>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int [MethodComparator.java <17:14 17:16>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int [MethodComparator.java <18:13 18:15>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int [MethodComparator.java <21:9 21:11>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.reflect.Method [MethodComparator.java <12:24 12:29>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.reflect.Method [MethodComparator.java <12:35 12:40>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int java.lang.String.compareTo(java.lang.String) [MethodComparator.java <13:40 13:48>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.String java.lang.reflect.Method.getName() [MethodComparator.java <13:30 13:36>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.String java.lang.reflect.Method.getName() [MethodComparator.java <13:53 13:59>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int java.lang.reflect.Method.getParameterCount() [MethodComparator.java <15:33 15:49>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int java.lang.reflect.Method.getParameterCount() [MethodComparator.java <15:58 15:74>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int java.lang.reflect.Method.getParameterCount() [MethodComparator.java <17:32 17:48>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int com.github.javaparser.symbolsolver.reflectionmodel.comparators.ParameterComparator.compare(java.lang.reflect.Parameter, java.lang.reflect.Parameter) [MethodComparator.java <18:58 18:64>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ParameterComparator.ParameterComparator() [MethodComparator.java <18:36 18:54>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ParameterComparator [MethodComparator.java <18:36 18:54>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.reflect.Parameter java.lang.reflect.Executable.getParameters() [MethodComparator.java <18:69 18:81>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.reflect.Parameter java.lang.reflect.Executable.getParameters() [MethodComparator.java <18:92 18:104>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> int com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator.compare(java.lang.Class<?>, java.lang.Class<?>) [MethodComparator.java <21:51 21:57>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator.ClassComparator() [MethodComparator.java <21:33 21:47>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> com.github.javaparser.symbolsolver.reflectionmodel.comparators.ClassComparator [MethodComparator.java <21:33 21:47>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.Class<?> java.lang.reflect.Method.getReturnType() [MethodComparator.java <21:62 21:74>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare(java.lang.reflect.Method, java.lang.reflect.Method) -> java.lang.Class<?> java.lang.reflect.Method.getReturnType() [MethodComparator.java <21:82 21:94>]
LOCAL_SYMBOL: MethodComparator.java<12:46> [MethodComparator.java <12:46 12:46>]
LOCAL_SYMBOL: MethodComparator.java<12:46> [MethodComparator.java <24:5 24:5>]
LOCAL_SYMBOL: MethodComparator.java<17:58> [MethodComparator.java <17:58 17:58>]
LOCAL_SYMBOL: MethodComparator.java<17:58> [MethodComparator.java <20:9 20:9>]
LOCAL_SYMBOL: MethodComparator.java<9:61> [MethodComparator.java <9:61 9:61>]
LOCAL_SYMBOL: MethodComparator.java<9:61> [MethodComparator.java <25:1 25:1>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<0> [MethodComparator.java <12:31 12:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<0> [MethodComparator.java <13:27 13:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<0> [MethodComparator.java <15:30 15:31>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<0> [MethodComparator.java <17:29 17:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<0> [MethodComparator.java <18:66 18:67>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<0> [MethodComparator.java <21:59 21:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<1> [MethodComparator.java <12:42 12:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<1> [MethodComparator.java <13:50 13:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<1> [MethodComparator.java <15:55 15:56>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<1> [MethodComparator.java <18:89 18:90>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<1> [MethodComparator.java <21:79 21:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<2> [MethodComparator.java <13:13 13:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<2> [MethodComparator.java <14:13 14:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<2> [MethodComparator.java <14:38 14:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<3> [MethodComparator.java <15:13 15:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<3> [MethodComparator.java <16:13 16:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<3> [MethodComparator.java <16:41 16:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<4> [MethodComparator.java <17:18 17:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<4> [MethodComparator.java <17:25 17:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<4> [MethodComparator.java <17:53 17:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<4> [MethodComparator.java <18:85 18:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<4> [MethodComparator.java <18:108 18:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<5> [MethodComparator.java <18:17 18:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<5> [MethodComparator.java <19:17 19:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<5> [MethodComparator.java <19:43 19:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<6> [MethodComparator.java <21:13 21:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<6> [MethodComparator.java <22:13 22:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.comparators.MethodComparator.compare<6> [MethodComparator.java <22:40 22:52>]
COMMENT: comment [MethodComparator.java <6:1 8:3>]
