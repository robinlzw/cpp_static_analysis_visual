FILE: ReflectionTypeParameter.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.reflectionmodel [ReflectionTypeParameter.java <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionTypeParameter.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionTypeParameter.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionTypeParameter.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionTypeParameter.java <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionTypeParameter.java <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReflectionTypeParameter.java <23:30 23:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ReflectionTypeParameter.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [ReflectionTypeParameter.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [ReflectionTypeParameter.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [ReflectionTypeParameter.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [ReflectionTypeParameter.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [ReflectionTypeParameter.java <23:19 23:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ReflectionTypeParameter.java <17:13 17:18>]
QUALIFIER: com.github [ReflectionTypeParameter.java <19:12 19:17>]
QUALIFIER: com.github [ReflectionTypeParameter.java <20:12 20:17>]
QUALIFIER: com.github [ReflectionTypeParameter.java <21:12 21:17>]
QUALIFIER: com.github [ReflectionTypeParameter.java <22:12 22:17>]
QUALIFIER: com.github [ReflectionTypeParameter.java <23:12 23:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ReflectionTypeParameter.java <17:9 17:11>]
QUALIFIER: com [ReflectionTypeParameter.java <19:8 19:10>]
QUALIFIER: com [ReflectionTypeParameter.java <20:8 20:10>]
QUALIFIER: com [ReflectionTypeParameter.java <21:8 21:10>]
QUALIFIER: com [ReflectionTypeParameter.java <22:8 22:10>]
QUALIFIER: com [ReflectionTypeParameter.java <23:8 23:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionTypeParameter.java <19:49 19:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionTypeParameter.java <20:49 20:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionTypeParameter.java <21:49 21:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReflectionTypeParameter.java <22:49 22:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionTypeParameter.java <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionTypeParameter.java <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionTypeParameter.java <21:43 21:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionTypeParameter.java <22:43 22:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReflectionTypeParameter.java <23:43 23:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReflectionTypeParameter.java <23:49 23:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: java.lang [ReflectionTypeParameter.java <25:13 25:16>]
QUALIFIER: java.lang [ReflectionTypeParameter.java <26:13 26:16>]
QUALIFIER: java.lang [ReflectionTypeParameter.java <27:13 27:16>]
QUALIFIER: java.lang [ReflectionTypeParameter.java <28:13 28:16>]
SYMBOL_PACKAGE: java.lang
QUALIFIER: java [ReflectionTypeParameter.java <25:8 25:11>]
QUALIFIER: java [ReflectionTypeParameter.java <26:8 26:11>]
QUALIFIER: java [ReflectionTypeParameter.java <27:8 27:11>]
QUALIFIER: java [ReflectionTypeParameter.java <28:8 28:11>]
QUALIFIER: java [ReflectionTypeParameter.java <29:8 29:11>]
QUALIFIER: java [ReflectionTypeParameter.java <30:8 30:11>]
QUALIFIER: java [ReflectionTypeParameter.java <31:8 31:11>]
QUALIFIER: java [ReflectionTypeParameter.java <32:8 32:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.lang.reflect [ReflectionTypeParameter.java <25:18 25:24>]
QUALIFIER: java.lang.reflect [ReflectionTypeParameter.java <26:18 26:24>]
QUALIFIER: java.lang.reflect [ReflectionTypeParameter.java <27:18 27:24>]
QUALIFIER: java.lang.reflect [ReflectionTypeParameter.java <28:18 28:24>]
SYMBOL_PACKAGE: java.lang.reflect
QUALIFIER: java.util.Arrays [ReflectionTypeParameter.java <113:16 113:21>]
QUALIFIER: java.util [ReflectionTypeParameter.java <29:13 29:16>]
QUALIFIER: java.util [ReflectionTypeParameter.java <30:13 30:16>]
QUALIFIER: java.util [ReflectionTypeParameter.java <31:13 31:16>]
QUALIFIER: java.util [ReflectionTypeParameter.java <32:13 32:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java.util.stream.Collectors [ReflectionTypeParameter.java <113:148 113:157>]
QUALIFIER: java.util.stream [ReflectionTypeParameter.java <32:18 32:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter [ReflectionTypeParameter.java <52:9 52:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter [ReflectionTypeParameter.java <53:9 53:12>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter [ReflectionTypeParameter.java <108:16 108:19>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter [ReflectionTypeParameter.java <37:1 <37:14 37:36> 130:1>]
SYMBOL_FIELD: private java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable [ReflectionTypeParameter.java <39:26 39:37>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeSolver [ReflectionTypeParameter.java <40:24 40:33>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <41:32 41:40>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <43:5 <43:5 <43:12 43:34> 43:109> 54:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: java.lang.reflect.TypeVariable<D>.D java.lang.reflect.TypeVariable<D>.getGenericDeclaration()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ReflectionTypeParameter.java <46:25 46:41>]
QUALIFIER: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory [ReflectionTypeParameter.java <113:89 113:105>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration.ReflectionConstructorDeclaration(java.lang.reflect.Constructor<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) [ReflectionTypeParameter.java <56:5 <56:5 <57:20 57:25> 57:35> 74:5>]
SYMBOL_METHOD: boolean java.lang.Object.equals(java.lang.Object)
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod()
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() [ReflectionTypeParameter.java <76:5 <76:5 <77:16 77:23> 77:25> 81:5>]
SYMBOL_METHOD: int java.lang.Object.hashCode()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getName() [ReflectionTypeParameter.java <83:5 <83:5 <84:19 84:25> 84:27> 86:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
SYMBOL_METHOD: java.lang.String java.lang.reflect.TypeVariable<D>.getName()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() [ReflectionTypeParameter.java <88:5 <88:5 <89:19 89:43> 89:45> 95:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerQualifiedName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() [ReflectionTypeParameter.java <97:5 <97:5 <98:19 98:32> 98:34> 104:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerId()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainer() [ReflectionTypeParameter.java <106:5 <106:5 <107:31 107:42> 107:44> 109:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainer()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <111:5 <111:5 <112:24 112:32> 112:55> 114:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ReflectionTypeParameter.java <113:70 113:74>]
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T)
SYMBOL_METHOD: java.lang.reflect.Type java.lang.reflect.TypeVariable<D>.getBounds()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.toString() [ReflectionTypeParameter.java <116:5 <116:5 <117:19 117:26> 117:28> 121:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() [ReflectionTypeParameter.java <123:5 <123:5 <124:47 124:59> 124:61> 129:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ReflectionTypeParameter.java <126:20 126:27>]
QUALIFIER: java.util.Optional [ReflectionTypeParameter.java <128:16 128:23>]
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.empty<T>()
REFERENCE_IMPORT: ReflectionTypeParameter.java -> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [ReflectionTypeParameter.java <19:62 19:82>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <20:62 20:85>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionTypeParameter.java <21:62 21:85>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ReflectionTypeParameter.java <22:62 22:79>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionTypeParameter.java <23:60 23:69>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.lang.reflect.Constructor<T> [ReflectionTypeParameter.java <25:26 25:36>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.lang.reflect.GenericDeclaration [ReflectionTypeParameter.java <26:26 26:43>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.lang.reflect.Method [ReflectionTypeParameter.java <27:26 27:31>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.lang.reflect.TypeVariable<D> [ReflectionTypeParameter.java <28:26 28:37>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.util.Arrays [ReflectionTypeParameter.java <29:18 29:23>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.util.List<E> [ReflectionTypeParameter.java <30:18 30:21>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.util.Optional<T> [ReflectionTypeParameter.java <31:18 31:25>]
REFERENCE_IMPORT: ReflectionTypeParameter.java -> java.util.stream.Collectors [ReflectionTypeParameter.java <32:25 32:34>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionTypeParameter.java <37:49 37:72>]
REFERENCE_TYPE_USAGE: java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable -> java.lang.reflect.TypeVariable<D> [ReflectionTypeParameter.java <39:13 39:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionTypeParameter.java <40:13 40:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ReflectionTypeParameter.java <41:13 41:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.TypeVariable<D> [ReflectionTypeParameter.java <43:36 43:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ReflectionTypeParameter.java <43:63 43:69>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionTypeParameter.java <43:88 43:97>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.GenericDeclaration [ReflectionTypeParameter.java <44:9 44:26>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.TypeVariable<D>.D java.lang.reflect.TypeVariable<D>.getGenericDeclaration() [ReflectionTypeParameter.java <44:62 44:82>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<T> [ReflectionTypeParameter.java <45:43 45:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Class<T> [ReflectionTypeParameter.java <46:63 46:67>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <46:13 46:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <48:13 48:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <50:13 50:21>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeDeclarationFor(java.lang.Class<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <46:43 46:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Method [ReflectionTypeParameter.java <47:50 47:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Method [ReflectionTypeParameter.java <48:58 48:63>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration.ReflectionMethodDeclaration(java.lang.reflect.Method, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <48:29 48:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclaration [ReflectionTypeParameter.java <48:29 48:55>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Constructor<T> [ReflectionTypeParameter.java <49:50 49:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Constructor<T> [ReflectionTypeParameter.java <50:63 50:73>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration.ReflectionConstructorDeclaration(java.lang.reflect.Constructor<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <50:29 50:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionConstructorDeclaration [ReflectionTypeParameter.java <50:29 50:60>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable [ReflectionTypeParameter.java <52:14 52:25>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter(java.lang.reflect.TypeVariable, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeSolver [ReflectionTypeParameter.java <53:14 53:23>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean java.lang.Object.equals(java.lang.Object) [ReflectionTypeParameter.java <57:20 57:25>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> java.lang.Override [ReflectionTypeParameter.java <56:6 56:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean [ReflectionTypeParameter.java <57:12 57:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> java.lang.Object [ReflectionTypeParameter.java <57:27 57:32>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionTypeParameter.java <59:28 59:51>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionTypeParameter.java <61:9 61:32>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReflectionTypeParameter.java <61:42 61:65>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean java.lang.String.equals(java.lang.Object) [ReflectionTypeParameter.java <63:33 63:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName() [ReflectionTypeParameter.java <63:14 63:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getQualifiedName() [ReflectionTypeParameter.java <63:45 63:60>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType() [ReflectionTypeParameter.java <66:13 66:26>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnType() [ReflectionTypeParameter.java <66:38 66:51>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod() [ReflectionTypeParameter.java <69:13 69:28>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals(java.lang.Object) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.declaredOnMethod() [ReflectionTypeParameter.java <69:40 69:55>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> int java.lang.Object.hashCode() [ReflectionTypeParameter.java <77:16 77:23>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> java.lang.Override [ReflectionTypeParameter.java <76:6 76:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> int [ReflectionTypeParameter.java <77:12 77:14>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> int [ReflectionTypeParameter.java <78:9 78:11>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> int java.lang.Object.hashCode() [ReflectionTypeParameter.java <78:35 78:42>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> int java.lang.Object.hashCode() [ReflectionTypeParameter.java <79:42 79:49>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable [ReflectionTypeParameter.java <78:22 78:33>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <79:32 79:40>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [ReflectionTypeParameter.java <84:19 84:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getName() -> java.lang.Override [ReflectionTypeParameter.java <83:6 83:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getName() -> java.lang.String [ReflectionTypeParameter.java <84:12 84:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getName() -> java.lang.String java.lang.reflect.TypeVariable<D>.getName() [ReflectionTypeParameter.java <85:29 85:35>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getName() -> java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable [ReflectionTypeParameter.java <85:16 85:27>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerQualifiedName() [ReflectionTypeParameter.java <89:19 89:43>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> java.lang.Override [ReflectionTypeParameter.java <88:6 88:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> java.lang.String [ReflectionTypeParameter.java <89:12 89:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <90:13 90:21>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <91:48 91:56>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <93:45 93:53>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <90:34 90:57>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <91:22 91:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [ReflectionTypeParameter.java <91:59 91:74>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [ReflectionTypeParameter.java <93:56 93:76>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [ReflectionTypeParameter.java <93:22 93:42>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainerId() [ReflectionTypeParameter.java <98:19 98:32>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> java.lang.Override [ReflectionTypeParameter.java <97:6 97:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> java.lang.String [ReflectionTypeParameter.java <98:12 98:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <99:13 99:21>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <100:48 100:56>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <102:45 102:53>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <99:34 99:57>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <100:22 100:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId() [ReflectionTypeParameter.java <100:59 100:63>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [ReflectionTypeParameter.java <102:56 102:76>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainerId() -> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [ReflectionTypeParameter.java <102:22 102:42>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getContainer() [ReflectionTypeParameter.java <107:31 107:42>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainer() -> java.lang.Override [ReflectionTypeParameter.java <106:6 106:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [ReflectionTypeParameter.java <107:12 107:29>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getContainer() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <108:21 108:29>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <112:24 112:32>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ReflectionTypeParameter.java <111:6 111:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ReflectionTypeParameter.java <112:17 112:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ReflectionTypeParameter.java <112:12 112:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ReflectionTypeParameter.java <112:17 112:21>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReflectionTypeParameter.java <112:34 112:43>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ReflectionTypeParameter.java <113:140 113:146>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ReflectionTypeParameter.java <113:56 113:58>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.stream.Stream<T> java.util.Arrays.stream<T>(T) [ReflectionTypeParameter.java <113:23 113:28>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.Type java.lang.reflect.TypeVariable<D>.getBounds() [ReflectionTypeParameter.java <113:43 113:51>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable [ReflectionTypeParameter.java <113:30 113:41>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.extendsBound(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReflectionTypeParameter.java <113:76 113:87>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.reflectionmodel.ReflectionFactory.typeUsageFor(java.lang.reflect.Type, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReflectionTypeParameter.java <113:107 113:118>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ReflectionTypeParameter.java <113:159 113:164>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.toString() -> java.lang.String java.lang.Object.toString() [ReflectionTypeParameter.java <117:19 117:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.toString() -> java.lang.Override [ReflectionTypeParameter.java <116:6 116:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.toString() -> java.lang.String [ReflectionTypeParameter.java <117:12 117:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.toString() -> java.lang.reflect.TypeVariable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.typeVariable [ReflectionTypeParameter.java <119:35 119:46>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.containerType() [ReflectionTypeParameter.java <124:47 124:59>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> java.lang.Override [ReflectionTypeParameter.java <123:6 123:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <124:21 124:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> java.util.Optional<T> [ReflectionTypeParameter.java <124:12 124:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <124:21 124:44>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <125:34 125:57>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReflectionTypeParameter.java <126:33 126:56>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <125:13 125:21>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.container [ReflectionTypeParameter.java <126:59 126:67>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ReflectionTypeParameter.java <126:29 126:30>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.containerType() -> static java.util.Optional<T> java.util.Optional<T>.empty<T>() [ReflectionTypeParameter.java <128:25 128:29>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<101:16> [ReflectionTypeParameter.java <101:16 101:16>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<101:16> [ReflectionTypeParameter.java <103:9 103:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<107:46> [ReflectionTypeParameter.java <107:46 107:46>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<107:46> [ReflectionTypeParameter.java <109:5 109:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<112:57> [ReflectionTypeParameter.java <112:57 112:57>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<112:57> [ReflectionTypeParameter.java <114:5 114:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<117:30> [ReflectionTypeParameter.java <117:30 117:30>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<117:30> [ReflectionTypeParameter.java <121:5 121:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<124:63> [ReflectionTypeParameter.java <124:63 124:63>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<124:63> [ReflectionTypeParameter.java <129:5 129:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<125:60> [ReflectionTypeParameter.java <125:60 125:60>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<125:60> [ReflectionTypeParameter.java <127:9 127:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<37:74> [ReflectionTypeParameter.java <37:74 37:74>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<37:74> [ReflectionTypeParameter.java <130:1 130:1>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<43:111> [ReflectionTypeParameter.java <43:111 43:111>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<43:111> [ReflectionTypeParameter.java <54:5 54:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<45:50> [ReflectionTypeParameter.java <45:50 45:50>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<45:50> [ReflectionTypeParameter.java <47:9 47:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<47:58> [ReflectionTypeParameter.java <47:58 47:58>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<47:58> [ReflectionTypeParameter.java <49:9 49:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<49:63> [ReflectionTypeParameter.java <49:63 49:63>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<49:63> [ReflectionTypeParameter.java <51:9 51:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<57:37> [ReflectionTypeParameter.java <57:37 57:37>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<57:37> [ReflectionTypeParameter.java <74:5 74:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<63:66> [ReflectionTypeParameter.java <63:66 63:66>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<63:66> [ReflectionTypeParameter.java <65:9 65:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<66:56> [ReflectionTypeParameter.java <66:56 66:56>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<66:56> [ReflectionTypeParameter.java <68:9 68:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<69:60> [ReflectionTypeParameter.java <69:60 69:60>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<69:60> [ReflectionTypeParameter.java <71:9 71:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<77:27> [ReflectionTypeParameter.java <77:27 77:27>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<77:27> [ReflectionTypeParameter.java <81:5 81:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<84:29> [ReflectionTypeParameter.java <84:29 84:29>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<84:29> [ReflectionTypeParameter.java <86:5 86:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<89:47> [ReflectionTypeParameter.java <89:47 89:47>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<89:47> [ReflectionTypeParameter.java <95:5 95:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<90:60> [ReflectionTypeParameter.java <90:60 90:60>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<90:60> [ReflectionTypeParameter.java <92:9 92:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<92:16> [ReflectionTypeParameter.java <92:16 92:16>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<92:16> [ReflectionTypeParameter.java <94:9 94:9>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<98:36> [ReflectionTypeParameter.java <98:36 98:36>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<98:36> [ReflectionTypeParameter.java <104:5 104:5>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<99:60> [ReflectionTypeParameter.java <99:60 99:60>]
LOCAL_SYMBOL: ReflectionTypeParameter.java<99:60> [ReflectionTypeParameter.java <101:9 101:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<0> [ReflectionTypeParameter.java <43:49 43:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<0> [ReflectionTypeParameter.java <44:49 44:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<0> [ReflectionTypeParameter.java <52:29 52:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<1> [ReflectionTypeParameter.java <43:71 43:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<2> [ReflectionTypeParameter.java <43:99 43:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<2> [ReflectionTypeParameter.java <46:90 46:99>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<2> [ReflectionTypeParameter.java <48:86 48:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<2> [ReflectionTypeParameter.java <50:96 50:105>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<2> [ReflectionTypeParameter.java <53:27 53:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <44:28 44:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <45:13 45:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <46:70 46:87>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <47:20 47:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <48:66 48:83>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <49:20 49:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.ReflectionTypeParameter<3> [ReflectionTypeParameter.java <50:76 50:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<0> [ReflectionTypeParameter.java <57:34 57:34>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<0> [ReflectionTypeParameter.java <58:21 58:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<0> [ReflectionTypeParameter.java <59:15 59:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<0> [ReflectionTypeParameter.java <61:68 61:68>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<1> [ReflectionTypeParameter.java <61:34 61:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<1> [ReflectionTypeParameter.java <63:40 63:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<1> [ReflectionTypeParameter.java <66:33 66:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.equals<1> [ReflectionTypeParameter.java <69:35 69:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds<0> [ReflectionTypeParameter.java <112:45 112:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.getBounds<0> [ReflectionTypeParameter.java <113:126 113:135>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode<0> [ReflectionTypeParameter.java <78:13 78:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode<0> [ReflectionTypeParameter.java <79:9 79:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode<0> [ReflectionTypeParameter.java <79:23 79:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.reflectionmodel.ReflectionTypeParameter.hashCode<0> [ReflectionTypeParameter.java <80:16 80:21>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<2> [ReflectionTypeParameter.java <113:61 113:64>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<2> [ReflectionTypeParameter.java <113:120 113:123>]
COMMENT: comment [ReflectionTypeParameter.java <1:1 15:3>]
COMMENT: comment [ReflectionTypeParameter.java <34:1 36:3>]
COMMENT: comment [ReflectionTypeParameter.java <72:9 72:28>]
