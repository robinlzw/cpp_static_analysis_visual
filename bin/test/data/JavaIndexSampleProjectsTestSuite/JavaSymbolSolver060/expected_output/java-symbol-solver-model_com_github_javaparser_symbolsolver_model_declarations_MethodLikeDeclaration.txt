FILE: MethodLikeDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations [MethodLikeDeclaration.java <17:50 17:61>]
QUALIFIER: com.github.javaparser.symbolsolver.model [MethodLikeDeclaration.java <17:44 17:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver [MethodLikeDeclaration.java <17:31 17:42>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [MethodLikeDeclaration.java <17:20 17:29>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [MethodLikeDeclaration.java <17:13 17:18>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [MethodLikeDeclaration.java <17:9 17:11>]
SYMBOL_PACKAGE: com
QUALIFIER: java.util [MethodLikeDeclaration.java <19:13 19:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [MethodLikeDeclaration.java <19:8 19:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [MethodLikeDeclaration.java <46:59 46:62>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [MethodLikeDeclaration.java <71:48 71:51>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [MethodLikeDeclaration.java <115:44 115:47>]
SYMBOL_INTERFACE: public com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration [MethodLikeDeclaration.java <26:1 <26:18 26:38> 122:1>]
SYMBOL_METHOD: default java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getPackageName() [MethodLikeDeclaration.java <30:1 <30:1 <30:20 30:33> 30:35> 32:5>]
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName()
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodLikeDeclaration.java <77:1 <77:1 <77:30 77:42> 77:44> 77:45>]
SYMBOL_METHOD: default java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getClassName() [MethodLikeDeclaration.java <37:1 <37:1 <37:20 37:31> 37:33> 39:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName()
SYMBOL_METHOD: default java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedName() [MethodLikeDeclaration.java <45:1 <45:1 <45:20 45:35> 45:37> 47:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: default java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() [MethodLikeDeclaration.java <52:1 <52:1 <52:20 52:31> 52:33> 64:5>]
SYMBOL_METHOD: java.lang.StringBuffer.StringBuffer()
SYMBOL_METHOD: java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String)
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: default int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodLikeDeclaration.java <82:1 <82:1 <82:9 82:25> 82:27> 82:28>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.describeType()
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodLikeDeclaration.java <87:1 <87:1 <87:26 87:33> 87:40> 87:41>]
SYMBOL_METHOD: java.lang.String java.lang.StringBuffer.toString()
SYMBOL_METHOD: default java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() [MethodLikeDeclaration.java <70:1 <70:1 <70:20 70:40> 70:42> 72:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId()
SYMBOL_METHOD: default com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() [MethodLikeDeclaration.java <94:1 <94:1 <94:34 94:45> 94:47> 99:5>]
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: default boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() [MethodLikeDeclaration.java <105:1 <105:1 <105:21 105:40> 105:42> 111:5>]
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic()
SYMBOL_METHOD: default java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) [MethodLikeDeclaration.java <113:5 <113:5 <114:48 114:64> 114:77> 121:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.findTypeParameter(java.lang.String)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName()
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [MethodLikeDeclaration.java <117:24 117:31>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.findTypeParameter(java.lang.String)
REFERENCE_IMPORT: MethodLikeDeclaration.java -> java.util.Optional<T> [MethodLikeDeclaration.java <19:18 19:25>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration -> com.github.javaparser.symbolsolver.model.declarations.Declaration [MethodLikeDeclaration.java <26:48 26:58>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration -> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable [MethodLikeDeclaration.java <26:61 26:78>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration -> com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel [MethodLikeDeclaration.java <26:81 26:94>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getPackageName() -> java.lang.String [MethodLikeDeclaration.java <30:13 30:18>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getPackageName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getPackageName() [MethodLikeDeclaration.java <31:32 31:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getPackageName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodLikeDeclaration.java <31:16 31:28>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getClassName() -> java.lang.String [MethodLikeDeclaration.java <37:13 37:18>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getClassName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getClassName() [MethodLikeDeclaration.java <38:32 38:43>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getClassName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodLikeDeclaration.java <38:16 38:28>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedName() -> java.lang.String [MethodLikeDeclaration.java <45:13 45:18>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getQualifiedName() [MethodLikeDeclaration.java <46:32 46:47>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedName() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodLikeDeclaration.java <46:16 46:28>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [MethodLikeDeclaration.java <46:64 46:70>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.String [MethodLikeDeclaration.java <52:13 52:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer [MethodLikeDeclaration.java <53:9 53:20>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer [MethodLikeDeclaration.java <53:31 53:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer.StringBuffer() [MethodLikeDeclaration.java <53:31 53:42>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String) [MethodLikeDeclaration.java <54:12 54:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String) [MethodLikeDeclaration.java <55:12 55:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String) [MethodLikeDeclaration.java <58:20 58:25>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String) [MethodLikeDeclaration.java <60:16 60:21>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String) [MethodLikeDeclaration.java <62:12 62:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [MethodLikeDeclaration.java <54:19 54:25>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> int [MethodLikeDeclaration.java <56:14 56:16>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodLikeDeclaration.java <56:29 56:45>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.describeType() [MethodLikeDeclaration.java <60:35 60:46>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodLikeDeclaration.java <60:23 60:30>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() -> java.lang.String java.lang.StringBuffer.toString() [MethodLikeDeclaration.java <63:19 63:26>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() -> java.lang.String [MethodLikeDeclaration.java <70:13 70:18>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration.getId() [MethodLikeDeclaration.java <71:32 71:36>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodLikeDeclaration.java <71:16 71:28>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getQualifiedSignature() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature() [MethodLikeDeclaration.java <71:53 71:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [MethodLikeDeclaration.java <77:5 77:28>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() -> int [MethodLikeDeclaration.java <82:5 82:7>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [MethodLikeDeclaration.java <87:5 87:24>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) -> int [MethodLikeDeclaration.java <87:35 87:37>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [MethodLikeDeclaration.java <94:13 94:32>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodLikeDeclaration.java <95:13 95:29>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodLikeDeclaration.java <98:25 98:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [MethodLikeDeclaration.java <96:23 96:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() -> java.lang.UnsupportedOperationException [MethodLikeDeclaration.java <96:23 96:51>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getLastParam() -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodLikeDeclaration.java <98:16 98:23>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() -> boolean [MethodLikeDeclaration.java <105:13 105:19>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodLikeDeclaration.java <106:13 106:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [MethodLikeDeclaration.java <109:29 109:45>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() -> boolean com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration.isVariadic() [MethodLikeDeclaration.java <109:54 109:63>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.hasVariadicParameter() -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [MethodLikeDeclaration.java <109:20 109:27>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.findTypeParameter(java.lang.String) [MethodLikeDeclaration.java <114:48 114:64>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.lang.Override [MethodLikeDeclaration.java <113:6 113:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodLikeDeclaration.java <114:22 114:45>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.util.Optional<T> [MethodLikeDeclaration.java <114:13 114:20>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodLikeDeclaration.java <114:22 114:45>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [MethodLikeDeclaration.java <115:14 115:37>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.lang.String [MethodLikeDeclaration.java <114:66 114:71>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [MethodLikeDeclaration.java <115:49 115:65>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [MethodLikeDeclaration.java <116:30 116:35>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getName() [MethodLikeDeclaration.java <116:20 116:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [MethodLikeDeclaration.java <117:33 117:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.findTypeParameter(java.lang.String) [MethodLikeDeclaration.java <120:32 120:48>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.declaringType() [MethodLikeDeclaration.java <120:16 120:28>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<105:44> [MethodLikeDeclaration.java <105:44 105:44>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<105:44> [MethodLikeDeclaration.java <111:5 111:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<106:39> [MethodLikeDeclaration.java <106:39 106:39>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<106:39> [MethodLikeDeclaration.java <108:9 108:9>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<108:16> [MethodLikeDeclaration.java <108:16 108:16>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<108:16> [MethodLikeDeclaration.java <110:9 110:9>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<114:79> [MethodLikeDeclaration.java <114:79 114:79>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<114:79> [MethodLikeDeclaration.java <121:5 121:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<115:70> [MethodLikeDeclaration.java <115:70 115:70>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<115:70> [MethodLikeDeclaration.java <119:9 119:9>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<116:44> [MethodLikeDeclaration.java <116:44 116:44>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<116:44> [MethodLikeDeclaration.java <118:13 118:13>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<26:96> [MethodLikeDeclaration.java <26:96 26:96>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<26:96> [MethodLikeDeclaration.java <122:1 122:1>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<30:37> [MethodLikeDeclaration.java <30:37 30:37>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<30:37> [MethodLikeDeclaration.java <32:5 32:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<37:35> [MethodLikeDeclaration.java <37:35 37:35>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<37:35> [MethodLikeDeclaration.java <39:5 39:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<45:39> [MethodLikeDeclaration.java <45:39 45:39>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<45:39> [MethodLikeDeclaration.java <47:5 47:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<52:35> [MethodLikeDeclaration.java <52:35 52:35>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<52:35> [MethodLikeDeclaration.java <64:5 64:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<56:55> [MethodLikeDeclaration.java <56:55 56:55>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<56:55> [MethodLikeDeclaration.java <61:9 61:9>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<57:25> [MethodLikeDeclaration.java <57:25 57:25>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<57:25> [MethodLikeDeclaration.java <59:13 59:13>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<70:44> [MethodLikeDeclaration.java <70:44 70:44>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<70:44> [MethodLikeDeclaration.java <72:5 72:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<94:49> [MethodLikeDeclaration.java <94:49 94:49>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<94:49> [MethodLikeDeclaration.java <99:5 99:5>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<95:39> [MethodLikeDeclaration.java <95:39 95:39>]
LOCAL_SYMBOL: MethodLikeDeclaration.java<95:39> [MethodLikeDeclaration.java <97:9 97:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter<0> [MethodLikeDeclaration.java <114:73 114:76>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter<0> [MethodLikeDeclaration.java <116:37 116:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter<0> [MethodLikeDeclaration.java <120:50 120:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter<1> [MethodLikeDeclaration.java <115:39 115:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter<1> [MethodLikeDeclaration.java <116:17 116:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.findTypeParameter<1> [MethodLikeDeclaration.java <117:36 117:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam<0> [MethodLikeDeclaration.java <87:39 87:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <53:22 53:23>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <54:9 54:10>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <55:9 55:10>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <58:17 58:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <60:13 60:14>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <62:9 62:10>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<0> [MethodLikeDeclaration.java <63:16 63:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<1> [MethodLikeDeclaration.java <56:18 56:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<1> [MethodLikeDeclaration.java <56:25 56:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<1> [MethodLikeDeclaration.java <56:50 56:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<1> [MethodLikeDeclaration.java <57:17 57:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getSignature<1> [MethodLikeDeclaration.java <60:32 60:32>]
COMMENT: comment [MethodLikeDeclaration.java <1:1 15:3>]
COMMENT: comment [MethodLikeDeclaration.java <21:1 25:3>]
COMMENT: comment [MethodLikeDeclaration.java <27:5 29:7>]
COMMENT: comment [MethodLikeDeclaration.java <34:5 36:7>]
COMMENT: comment [MethodLikeDeclaration.java <41:5 44:7>]
COMMENT: comment [MethodLikeDeclaration.java <49:5 51:7>]
COMMENT: comment [MethodLikeDeclaration.java <66:5 69:7>]
COMMENT: comment [MethodLikeDeclaration.java <74:5 76:7>]
COMMENT: comment [MethodLikeDeclaration.java <79:5 81:7>]
COMMENT: comment [MethodLikeDeclaration.java <84:5 86:7>]
COMMENT: comment [MethodLikeDeclaration.java <89:5 93:7>]
COMMENT: comment [MethodLikeDeclaration.java <101:5 104:7>]
