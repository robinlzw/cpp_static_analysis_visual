FILE: CombinedTypeSolver.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution.typesolvers [CombinedTypeSolver.java <17:55 17:65>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution [CombinedTypeSolver.java <17:44 17:53>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.resolution
QUALIFIER: com.github.javaparser.symbolsolver [CombinedTypeSolver.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [CombinedTypeSolver.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [CombinedTypeSolver.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [CombinedTypeSolver.java <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [CombinedTypeSolver.java <22:30 22:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [CombinedTypeSolver.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [CombinedTypeSolver.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [CombinedTypeSolver.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [CombinedTypeSolver.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [CombinedTypeSolver.java <22:19 22:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [CombinedTypeSolver.java <17:13 17:18>]
QUALIFIER: com.github [CombinedTypeSolver.java <19:12 19:17>]
QUALIFIER: com.github [CombinedTypeSolver.java <20:12 20:17>]
QUALIFIER: com.github [CombinedTypeSolver.java <21:12 21:17>]
QUALIFIER: com.github [CombinedTypeSolver.java <22:12 22:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [CombinedTypeSolver.java <17:9 17:11>]
QUALIFIER: com [CombinedTypeSolver.java <19:8 19:10>]
QUALIFIER: com [CombinedTypeSolver.java <20:8 20:10>]
QUALIFIER: com [CombinedTypeSolver.java <21:8 21:10>]
QUALIFIER: com [CombinedTypeSolver.java <22:8 22:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [CombinedTypeSolver.java <19:43 19:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [CombinedTypeSolver.java <20:49 20:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [CombinedTypeSolver.java <20:43 20:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [CombinedTypeSolver.java <21:43 21:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [CombinedTypeSolver.java <22:43 22:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [CombinedTypeSolver.java <21:49 21:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [CombinedTypeSolver.java <22:49 22:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: java.util [CombinedTypeSolver.java <24:13 24:16>]
QUALIFIER: java.util [CombinedTypeSolver.java <25:13 25:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [CombinedTypeSolver.java <24:8 24:11>]
QUALIFIER: java [CombinedTypeSolver.java <25:8 25:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver [CombinedTypeSolver.java <48:9 48:12>]
QUALIFIER: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver [CombinedTypeSolver.java <52:9 52:12>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver [CombinedTypeSolver.java <30:1 <30:14 30:31> 76:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.parent [CombinedTypeSolver.java <32:24 32:29>]
SYMBOL_FIELD: private java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements [CombinedTypeSolver.java <33:30 33:37>]
SYMBOL_METHOD: java.util.ArrayList<E>.ArrayList()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CombinedTypeSolver.java <35:5 <35:5 <35:12 35:29> 35:53> 39:5>]
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CombinedTypeSolver.java <51:5 <51:5 <51:17 51:19> 51:42> 54:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.getParent() [CombinedTypeSolver.java <41:5 <41:5 <42:23 42:31> 42:33> 44:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getParent()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: public void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CombinedTypeSolver.java <46:5 <46:5 <47:17 47:25> 47:44> 49:5>]
SYMBOL_METHOD: void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: void
SYMBOL_METHOD: boolean java.util.List<E>.add(java.util.List<E>.E)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) [CombinedTypeSolver.java <56:5 <56:5 <57:54 57:67> 57:80> 65:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [CombinedTypeSolver.java <64:16 64:30>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) [CombinedTypeSolver.java <67:5 <67:5 <68:37 68:45> 68:89> 75:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String)
REFERENCE_IMPORT: CombinedTypeSolver.java -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [CombinedTypeSolver.java <19:59 19:81>]
REFERENCE_IMPORT: CombinedTypeSolver.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <20:62 20:85>]
REFERENCE_IMPORT: CombinedTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CombinedTypeSolver.java <21:60 21:74>]
REFERENCE_IMPORT: CombinedTypeSolver.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <22:60 22:69>]
REFERENCE_IMPORT: CombinedTypeSolver.java -> java.util.ArrayList<E> [CombinedTypeSolver.java <24:18 24:26>]
REFERENCE_IMPORT: CombinedTypeSolver.java -> java.util.List<E> [CombinedTypeSolver.java <25:18 25:21>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <30:44 30:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.parent -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <32:13 32:22>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <33:18 33:27>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements -> java.util.List<E> [CombinedTypeSolver.java <33:13 33:16>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <33:18 33:27>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements -> java.util.ArrayList<E>.ArrayList() [CombinedTypeSolver.java <33:45 33:55>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements -> java.util.ArrayList<E> [CombinedTypeSolver.java <33:45 33:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <35:31 35:40>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <36:14 36:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CombinedTypeSolver.java <37:13 37:15>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.resolution.TypeSolver.getParent() [CombinedTypeSolver.java <42:23 42:31>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.getParent() -> java.lang.Override [CombinedTypeSolver.java <41:6 41:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <42:12 42:21>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.getParent() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.parent [CombinedTypeSolver.java <43:16 43:21>]
REFERENCE_OVERRIDE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CombinedTypeSolver.java <47:17 47:25>]
REFERENCE_ANNOTATION_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [CombinedTypeSolver.java <46:6 46:13>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void [CombinedTypeSolver.java <47:12 47:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <47:27 47:36>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.parent [CombinedTypeSolver.java <48:14 48:19>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void [CombinedTypeSolver.java <51:12 51:15>]
REFERENCE_TYPE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <51:21 51:30>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.util.List<E>.add(java.util.List<E>.E) [CombinedTypeSolver.java <52:23 52:25>]
REFERENCE_USAGE: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements [CombinedTypeSolver.java <52:14 52:21>]
REFERENCE_CALL: void com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> void com.github.javaparser.symbolsolver.model.resolution.TypeSolver.setParent(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [CombinedTypeSolver.java <53:20 53:28>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CombinedTypeSolver.java <57:54 57:67>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> java.lang.Override [CombinedTypeSolver.java <56:6 56:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <57:28 57:51>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <59:29 59:52>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <69:25 69:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CombinedTypeSolver.java <57:12 57:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CombinedTypeSolver.java <59:13 59:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <57:28 57:51>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <59:29 59:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <64:41 64:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> java.lang.String [CombinedTypeSolver.java <57:69 57:74>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [CombinedTypeSolver.java <58:14 58:23>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> java.util.List<com.github.javaparser.symbolsolver.model.resolution.TypeSolver> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.elements [CombinedTypeSolver.java <58:30 58:37>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [CombinedTypeSolver.java <59:64 59:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CombinedTypeSolver.java <60:21 60:28>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.unsolved<S, S2>(java.lang.Class<S2>) [CombinedTypeSolver.java <64:32 64:39>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.resolution.TypeSolver.solveType(java.lang.String) [CombinedTypeSolver.java <68:37 68:45>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> java.lang.Override [CombinedTypeSolver.java <67:6 67:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <68:12 68:35>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [CombinedTypeSolver.java <69:25 69:48>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> java.lang.String [CombinedTypeSolver.java <68:47 68:52>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [CombinedTypeSolver.java <68:67 68:89>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException [CombinedTypeSolver.java <73:23 73:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [CombinedTypeSolver.java <69:9 69:23>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType(java.lang.String) [CombinedTypeSolver.java <69:57 69:70>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> boolean com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.isSolved() [CombinedTypeSolver.java <70:17 70:24>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [CombinedTypeSolver.java <71:24 71:50>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType(java.lang.String) -> com.github.javaparser.symbolsolver.javaparsermodel.UnsolvedSymbolException.UnsolvedSymbolException(java.lang.String) [CombinedTypeSolver.java <73:23 73:45>]
LOCAL_SYMBOL: CombinedTypeSolver.java<30:55> [CombinedTypeSolver.java <30:55 30:55>]
LOCAL_SYMBOL: CombinedTypeSolver.java<30:55> [CombinedTypeSolver.java <76:1 76:1>]
LOCAL_SYMBOL: CombinedTypeSolver.java<35:55> [CombinedTypeSolver.java <35:55 35:55>]
LOCAL_SYMBOL: CombinedTypeSolver.java<35:55> [CombinedTypeSolver.java <39:5 39:5>]
LOCAL_SYMBOL: CombinedTypeSolver.java<36:40> [CombinedTypeSolver.java <36:40 36:40>]
LOCAL_SYMBOL: CombinedTypeSolver.java<36:40> [CombinedTypeSolver.java <38:9 38:9>]
LOCAL_SYMBOL: CombinedTypeSolver.java<42:35> [CombinedTypeSolver.java <42:35 42:35>]
LOCAL_SYMBOL: CombinedTypeSolver.java<42:35> [CombinedTypeSolver.java <44:5 44:5>]
LOCAL_SYMBOL: CombinedTypeSolver.java<47:46> [CombinedTypeSolver.java <47:46 47:46>]
LOCAL_SYMBOL: CombinedTypeSolver.java<47:46> [CombinedTypeSolver.java <49:5 49:5>]
LOCAL_SYMBOL: CombinedTypeSolver.java<51:44> [CombinedTypeSolver.java <51:44 51:44>]
LOCAL_SYMBOL: CombinedTypeSolver.java<51:44> [CombinedTypeSolver.java <54:5 54:5>]
LOCAL_SYMBOL: CombinedTypeSolver.java<57:82> [CombinedTypeSolver.java <57:82 57:82>]
LOCAL_SYMBOL: CombinedTypeSolver.java<57:82> [CombinedTypeSolver.java <65:5 65:5>]
LOCAL_SYMBOL: CombinedTypeSolver.java<58:40> [CombinedTypeSolver.java <58:40 58:40>]
LOCAL_SYMBOL: CombinedTypeSolver.java<58:40> [CombinedTypeSolver.java <63:9 63:9>]
LOCAL_SYMBOL: CombinedTypeSolver.java<60:33> [CombinedTypeSolver.java <60:33 60:33>]
LOCAL_SYMBOL: CombinedTypeSolver.java<60:33> [CombinedTypeSolver.java <62:13 62:13>]
LOCAL_SYMBOL: CombinedTypeSolver.java<68:91> [CombinedTypeSolver.java <68:91 68:91>]
LOCAL_SYMBOL: CombinedTypeSolver.java<68:91> [CombinedTypeSolver.java <75:5 75:5>]
LOCAL_SYMBOL: CombinedTypeSolver.java<70:29> [CombinedTypeSolver.java <70:29 70:29>]
LOCAL_SYMBOL: CombinedTypeSolver.java<70:29> [CombinedTypeSolver.java <72:9 72:9>]
LOCAL_SYMBOL: CombinedTypeSolver.java<72:16> [CombinedTypeSolver.java <72:16 72:16>]
LOCAL_SYMBOL: CombinedTypeSolver.java<72:16> [CombinedTypeSolver.java <74:9 74:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver<0> [CombinedTypeSolver.java <35:45 35:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver<0> [CombinedTypeSolver.java <36:30 36:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver<1> [CombinedTypeSolver.java <36:25 36:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.CombinedTypeSolver<1> [CombinedTypeSolver.java <37:17 37:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add<0> [CombinedTypeSolver.java <51:32 51:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add<0> [CombinedTypeSolver.java <52:27 52:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.add<0> [CombinedTypeSolver.java <53:9 53:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent<0> [CombinedTypeSolver.java <47:38 47:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.setParent<0> [CombinedTypeSolver.java <48:23 48:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType<0> [CombinedTypeSolver.java <68:54 68:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType<0> [CombinedTypeSolver.java <69:72 69:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType<0> [CombinedTypeSolver.java <73:47 73:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType<1> [CombinedTypeSolver.java <69:51 69:53>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType<1> [CombinedTypeSolver.java <70:13 70:15>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.solveType<1> [CombinedTypeSolver.java <71:20 71:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<0> [CombinedTypeSolver.java <57:76 57:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<0> [CombinedTypeSolver.java <59:79 59:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<1> [CombinedTypeSolver.java <58:25 58:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<1> [CombinedTypeSolver.java <59:61 59:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<3> [CombinedTypeSolver.java <59:55 59:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<3> [CombinedTypeSolver.java <60:17 60:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver.tryToSolveType<3> [CombinedTypeSolver.java <61:24 61:26>]
COMMENT: comment [CombinedTypeSolver.java <1:1 15:3>]
COMMENT: comment [CombinedTypeSolver.java <27:1 29:3>]
