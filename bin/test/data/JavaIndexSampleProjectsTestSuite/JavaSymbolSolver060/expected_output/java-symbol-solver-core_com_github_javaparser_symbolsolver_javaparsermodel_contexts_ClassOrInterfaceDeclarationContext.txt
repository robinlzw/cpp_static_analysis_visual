FILE: ClassOrInterfaceDeclarationContext.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts [ClassOrInterfaceDeclarationContext.java <17:60 17:67>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ClassOrInterfaceDeclarationContext.java <17:44 17:58>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ClassOrInterfaceDeclarationContext.java <20:43 20:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ClassOrInterfaceDeclarationContext.java <21:43 21:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ClassOrInterfaceDeclarationContext.java <27:30 27:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <26:19 26:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <27:19 27:28>]
QUALIFIER: com.github.javaparser [ClassOrInterfaceDeclarationContext.java <79:25 79:34>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <17:13 17:18>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <19:12 19:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <20:12 20:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <21:12 21:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <22:12 22:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <23:12 23:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <24:12 24:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <25:12 25:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <26:12 26:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <27:12 27:17>]
QUALIFIER: com.github [ClassOrInterfaceDeclarationContext.java <79:18 79:23>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <17:9 17:11>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <19:8 19:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <20:8 20:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <21:8 21:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <22:8 22:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <23:8 23:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <24:8 24:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <25:8 25:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <26:8 26:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <27:8 27:10>]
QUALIFIER: com [ClassOrInterfaceDeclarationContext.java <79:14 79:16>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.ast.body [ClassOrInterfaceDeclarationContext.java <19:34 19:37>]
SYMBOL_PACKAGE: com.github.javaparser.ast.body
QUALIFIER: com.github.javaparser.ast [ClassOrInterfaceDeclarationContext.java <19:30 19:32>]
QUALIFIER: com.github.javaparser.ast [ClassOrInterfaceDeclarationContext.java <79:36 79:38>]
SYMBOL_PACKAGE: com.github.javaparser.ast
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ClassOrInterfaceDeclarationContext.java <106:16 106:31>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ClassOrInterfaceDeclarationContext.java <21:59 21:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [ClassOrInterfaceDeclarationContext.java <22:43 22:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ClassOrInterfaceDeclarationContext.java <23:43 23:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ClassOrInterfaceDeclarationContext.java <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ClassOrInterfaceDeclarationContext.java <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ClassOrInterfaceDeclarationContext.java <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ClassOrInterfaceDeclarationContext.java <27:43 27:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ClassOrInterfaceDeclarationContext.java <23:49 23:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ClassOrInterfaceDeclarationContext.java <24:49 24:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ClassOrInterfaceDeclarationContext.java <25:49 25:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.Value [ClassOrInterfaceDeclarationContext.java <70:32 70:36>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ClassOrInterfaceDeclarationContext.java <26:49 26:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem [ClassOrInterfaceDeclarationContext.java <27:49 27:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem
QUALIFIER: java.util [ClassOrInterfaceDeclarationContext.java <29:13 29:16>]
QUALIFIER: java.util [ClassOrInterfaceDeclarationContext.java <30:13 30:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ClassOrInterfaceDeclarationContext.java <29:8 29:11>]
QUALIFIER: java [ClassOrInterfaceDeclarationContext.java <30:8 30:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <45:9 45:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <57:13 57:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <58:43 58:46>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <69:13 69:16>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <70:43 70:46>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <106:68 106:71>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext [ClassOrInterfaceDeclarationContext.java <35:1 <35:14 35:47> 108:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.javaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <37:46 37:77>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <43:5 <43:5 <43:12 43:45> 43:109> 47:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.JavaParserTypeDeclarationAdapter(com.github.javaparser.ast.body.TypeDeclaration<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.core.resolution.Context)
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() [ClassOrInterfaceDeclarationContext.java <105:5 <105:5 <105:38 105:51> 105:53> 107:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <53:5 <53:5 <54:56 54:66> 54:102> 63:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasVisibleField(java.lang.String)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2)
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution.SymbolReference [ClassOrInterfaceDeclarationContext.java <58:20 58:34>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getVisibleField(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent()
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <65:5 <65:5 <66:28 66:45> 66:81> 75:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.Optional<T> java.util.Optional<T>.of<T>(T)
QUALIFIER: java.util.Optional [ClassOrInterfaceDeclarationContext.java <70:20 70:27>]
QUALIFIER: java.util.Optional [ClassOrInterfaceDeclarationContext.java <81:24 81:31>]
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.resolution.Value com.github.javaparser.symbolsolver.model.resolution.Value.from(com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration)
SYMBOL_METHOD: public java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <77:5 <77:5 <78:27 78:42> 78:78> 85:5>]
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
QUALIFIER: com.github.javaparser.ast.type [ClassOrInterfaceDeclarationContext.java <79:40 79:43>]
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId()
SYMBOL_METHOD: com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.core.resolution.Context.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <87:5 <87:5 <88:45 88:53> 88:89> 90:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <92:5 <92:5 <93:47 93:57> 93:140> 95:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <97:5 <97:5 <97:52 97:67> 97:117> 99:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration)
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_FIELD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.typeSolver
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ClassOrInterfaceDeclarationContext.java <19:39 19:65>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade [ClassOrInterfaceDeclarationContext.java <20:59 20:74>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ClassOrInterfaceDeclarationContext.java <21:72 21:94>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.model.declarations [ClassOrInterfaceDeclarationContext.java <22:49 22:60>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ClassOrInterfaceDeclarationContext.java <23:60 23:74>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <24:60 24:69>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.model.resolution.Value [ClassOrInterfaceDeclarationContext.java <25:60 25:64>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <26:60 26:63>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ClassOrInterfaceDeclarationContext.java <27:60 27:71>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> java.util.List<E> [ClassOrInterfaceDeclarationContext.java <29:18 29:21>]
REFERENCE_IMPORT: ClassOrInterfaceDeclarationContext.java -> java.util.Optional<T> [ClassOrInterfaceDeclarationContext.java <30:18 30:25>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ClassOrInterfaceDeclarationContext.java <35:83 35:109>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N> [ClassOrInterfaceDeclarationContext.java <35:57 35:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ClassOrInterfaceDeclarationContext.java <35:83 35:109>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.javaParserTypeDeclarationAdapter -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <37:13 37:44>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <43:12 43:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration [ClassOrInterfaceDeclarationContext.java <43:47 43:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <43:88 43:97>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.AbstractJavaParserContext(com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <44:9 44:13>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.javaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <45:14 45:45>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.JavaParserTypeDeclarationAdapter(com.github.javaparser.ast.body.TypeDeclaration<?>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver, com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.core.resolution.Context) [ClassOrInterfaceDeclarationContext.java <45:53 45:84>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <45:53 45:84>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() [ClassOrInterfaceDeclarationContext.java <46:17 46:30>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <54:56 54:66>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ClassOrInterfaceDeclarationContext.java <53:6 53:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> ? extends ValueDeclaration [ClassOrInterfaceDeclarationContext.java <54:28 54:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ClassOrInterfaceDeclarationContext.java <54:12 54:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration [ClassOrInterfaceDeclarationContext.java <54:38 54:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ClassOrInterfaceDeclarationContext.java <54:68 54:73>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <54:81 54:90>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException() [ClassOrInterfaceDeclarationContext.java <55:43 55:66>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ClassOrInterfaceDeclarationContext.java <55:43 55:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasVisibleField(java.lang.String) [ClassOrInterfaceDeclarationContext.java <57:35 57:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() [ClassOrInterfaceDeclarationContext.java <57:18 57:31>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() [ClassOrInterfaceDeclarationContext.java <58:48 58:61>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.solved<S, S2>(S2) [ClassOrInterfaceDeclarationContext.java <58:36 58:41>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getVisibleField(java.lang.String) [ClassOrInterfaceDeclarationContext.java <58:65 58:79>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <62:28 62:38>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<? extends ValueDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ClassOrInterfaceDeclarationContext.java <62:16 62:24>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <66:28 66:45>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ClassOrInterfaceDeclarationContext.java <65:6 65:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.resolution.Value [ClassOrInterfaceDeclarationContext.java <66:21 66:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ClassOrInterfaceDeclarationContext.java <66:12 66:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.Value [ClassOrInterfaceDeclarationContext.java <66:21 66:25>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ClassOrInterfaceDeclarationContext.java <66:47 66:52>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <66:60 66:69>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException.IllegalArgumentException() [ClassOrInterfaceDeclarationContext.java <67:43 67:66>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.IllegalArgumentException [ClassOrInterfaceDeclarationContext.java <67:43 67:66>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasVisibleField(java.lang.String) [ClassOrInterfaceDeclarationContext.java <69:35 69:49>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() [ClassOrInterfaceDeclarationContext.java <69:18 69:31>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() [ClassOrInterfaceDeclarationContext.java <70:48 70:61>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ClassOrInterfaceDeclarationContext.java <70:29 70:30>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static com.github.javaparser.symbolsolver.model.resolution.Value com.github.javaparser.symbolsolver.model.resolution.Value.from(com.github.javaparser.symbolsolver.model.declarations.ValueDeclaration) [ClassOrInterfaceDeclarationContext.java <70:38 70:41>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.FieldDeclaration com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getVisibleField(java.lang.String) [ClassOrInterfaceDeclarationContext.java <70:65 70:79>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.core.resolution.Context.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <74:28 74:45>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.resolution.Value> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ClassOrInterfaceDeclarationContext.java <74:16 74:24>]
REFERENCE_OVERRIDE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <78:27 78:42>]
REFERENCE_ANNOTATION_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ClassOrInterfaceDeclarationContext.java <77:6 77:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Optional<T> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <78:21 78:24>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<T> [ClassOrInterfaceDeclarationContext.java <78:12 78:19>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <78:21 78:24>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ClassOrInterfaceDeclarationContext.java <78:44 78:49>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <78:57 78:66>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.type.TypeParameter [ClassOrInterfaceDeclarationContext.java <79:45 79:57>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters() [ClassOrInterfaceDeclarationContext.java <79:76 79:92>]
REFERENCE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ClassOrInterfaceDeclarationContext.java <79:64 79:74>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean java.lang.String.equals(java.lang.Object) [ClassOrInterfaceDeclarationContext.java <80:38 80:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String com.github.javaparser.ast.nodeTypes.NodeWithIdentifier<N>.getId() [ClassOrInterfaceDeclarationContext.java <80:30 80:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.expr.SimpleName com.github.javaparser.ast.type.TypeParameter.getName() [ClassOrInterfaceDeclarationContext.java <80:20 80:26>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.Optional<T> java.util.Optional<T>.of<T>(T) [ClassOrInterfaceDeclarationContext.java <81:33 81:34>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [ClassOrInterfaceDeclarationContext.java <81:40 81:51>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ClassOrInterfaceDeclarationContext.java <81:40 81:51>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <81:57 81:79>]
REFERENCE_TYPE_USAGE: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [ClassOrInterfaceDeclarationContext.java <81:57 81:79>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.core.resolution.Context.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <84:28 84:43>]
REFERENCE_CALL: java.util.Optional<com.github.javaparser.symbolsolver.model.typesystem.Type> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.core.resolution.Context com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.getParent() [ClassOrInterfaceDeclarationContext.java <84:16 84:24>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <88:45 88:53>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ClassOrInterfaceDeclarationContext.java <87:6 87:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ClassOrInterfaceDeclarationContext.java <88:28 88:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ClassOrInterfaceDeclarationContext.java <88:12 88:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration [ClassOrInterfaceDeclarationContext.java <88:28 88:42>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ClassOrInterfaceDeclarationContext.java <88:55 88:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <88:68 88:77>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <89:49 89:57>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.TypeDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType(java.lang.String, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.javaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <89:16 89:47>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <93:47 93:57>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ClassOrInterfaceDeclarationContext.java <92:6 92:13>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ClassOrInterfaceDeclarationContext.java <93:28 93:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ClassOrInterfaceDeclarationContext.java <93:12 93:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ClassOrInterfaceDeclarationContext.java <93:28 93:44>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.String [ClassOrInterfaceDeclarationContext.java <93:59 93:64>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <93:77 93:80>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <97:74 97:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ClassOrInterfaceDeclarationContext.java <93:72 93:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <93:77 93:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> boolean [ClassOrInterfaceDeclarationContext.java <93:99 93:105>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <93:119 93:128>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <94:49 94:59>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod(java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, boolean, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.javaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <94:16 94:47>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.core.resolution.Context.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <97:52 97:67>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [ClassOrInterfaceDeclarationContext.java <97:28 97:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ClassOrInterfaceDeclarationContext.java <97:12 97:26>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [ClassOrInterfaceDeclarationContext.java <97:28 97:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ClassOrInterfaceDeclarationContext.java <97:69 97:72>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ClassOrInterfaceDeclarationContext.java <97:74 97:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ClassOrInterfaceDeclarationContext.java <97:96 97:105>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <98:49 98:64>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor(java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.JavaParserTypeDeclarationAdapter com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.javaParserTypeDeclarationAdapter [ClassOrInterfaceDeclarationContext.java <98:16 98:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ClassOrInterfaceDeclarationContext.java <105:13 105:36>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.getTypeDeclaration(com.github.javaparser.ast.body.ClassOrInterfaceDeclaration) [ClassOrInterfaceDeclarationContext.java <106:49 106:66>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() -> static com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFacade.get(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ClassOrInterfaceDeclarationContext.java <106:33 106:35>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.typeSolver [ClassOrInterfaceDeclarationContext.java <106:37 106:46>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.getDeclaration() -> com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.N com.github.javaparser.symbolsolver.javaparsermodel.contexts.AbstractJavaParserContext<N>.wrappedNode [ClassOrInterfaceDeclarationContext.java <106:73 106:83>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<105:55> [ClassOrInterfaceDeclarationContext.java <105:55 105:55>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<105:55> [ClassOrInterfaceDeclarationContext.java <107:5 107:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<35:112> [ClassOrInterfaceDeclarationContext.java <35:112 35:112>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<35:112> [ClassOrInterfaceDeclarationContext.java <108:1 108:1>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<43:111> [ClassOrInterfaceDeclarationContext.java <43:111 43:111>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<43:111> [ClassOrInterfaceDeclarationContext.java <47:5 47:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<54:104> [ClassOrInterfaceDeclarationContext.java <54:104 54:104>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<54:104> [ClassOrInterfaceDeclarationContext.java <63:5 63:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<57:58> [ClassOrInterfaceDeclarationContext.java <57:58 57:58>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<57:58> [ClassOrInterfaceDeclarationContext.java <59:9 59:9>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<66:83> [ClassOrInterfaceDeclarationContext.java <66:83 66:83>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<66:83> [ClassOrInterfaceDeclarationContext.java <75:5 75:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<69:58> [ClassOrInterfaceDeclarationContext.java <69:58 69:58>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<69:58> [ClassOrInterfaceDeclarationContext.java <71:9 71:9>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<78:80> [ClassOrInterfaceDeclarationContext.java <78:80 78:80>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<78:80> [ClassOrInterfaceDeclarationContext.java <85:5 85:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<79:97> [ClassOrInterfaceDeclarationContext.java <79:97 79:97>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<79:97> [ClassOrInterfaceDeclarationContext.java <83:9 83:9>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<80:52> [ClassOrInterfaceDeclarationContext.java <80:52 80:52>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<80:52> [ClassOrInterfaceDeclarationContext.java <82:13 82:13>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<88:91> [ClassOrInterfaceDeclarationContext.java <88:91 88:91>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<88:91> [ClassOrInterfaceDeclarationContext.java <90:5 90:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<93:142> [ClassOrInterfaceDeclarationContext.java <93:142 93:142>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<93:142> [ClassOrInterfaceDeclarationContext.java <95:5 95:5>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<97:119> [ClassOrInterfaceDeclarationContext.java <97:119 97:119>]
LOCAL_SYMBOL: ClassOrInterfaceDeclarationContext.java<97:119> [ClassOrInterfaceDeclarationContext.java <99:5 99:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext<0> [ClassOrInterfaceDeclarationContext.java <43:75 43:85>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext<0> [ClassOrInterfaceDeclarationContext.java <44:15 44:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext<0> [ClassOrInterfaceDeclarationContext.java <45:86 45:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext<1> [ClassOrInterfaceDeclarationContext.java <43:99 43:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext<1> [ClassOrInterfaceDeclarationContext.java <44:28 44:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.ClassOrInterfaceDeclarationContext<1> [ClassOrInterfaceDeclarationContext.java <45:99 45:108>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor<0> [ClassOrInterfaceDeclarationContext.java <97:80 97:93>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor<0> [ClassOrInterfaceDeclarationContext.java <98:66 98:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor<1> [ClassOrInterfaceDeclarationContext.java <97:107 97:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveConstructor<1> [ClassOrInterfaceDeclarationContext.java <98:82 98:91>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<0> [ClassOrInterfaceDeclarationContext.java <78:51 78:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<0> [ClassOrInterfaceDeclarationContext.java <80:45 80:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<0> [ClassOrInterfaceDeclarationContext.java <84:45 84:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<1> [ClassOrInterfaceDeclarationContext.java <78:68 78:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<1> [ClassOrInterfaceDeclarationContext.java <81:85 81:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<1> [ClassOrInterfaceDeclarationContext.java <84:51 84:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<2> [ClassOrInterfaceDeclarationContext.java <79:59 79:60>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<2> [ClassOrInterfaceDeclarationContext.java <80:17 80:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveGenericType<2> [ClassOrInterfaceDeclarationContext.java <81:81 81:82>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<0> [ClassOrInterfaceDeclarationContext.java <93:66 93:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<0> [ClassOrInterfaceDeclarationContext.java <94:61 94:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<1> [ClassOrInterfaceDeclarationContext.java <93:83 93:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<1> [ClassOrInterfaceDeclarationContext.java <94:67 94:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<2> [ClassOrInterfaceDeclarationContext.java <93:107 93:116>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<2> [ClassOrInterfaceDeclarationContext.java <94:83 94:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<3> [ClassOrInterfaceDeclarationContext.java <93:130 93:139>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveMethod<3> [ClassOrInterfaceDeclarationContext.java <94:95 94:104>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<0> [ClassOrInterfaceDeclarationContext.java <54:75 54:78>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<0> [ClassOrInterfaceDeclarationContext.java <57:51 57:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<0> [ClassOrInterfaceDeclarationContext.java <58:81 58:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<0> [ClassOrInterfaceDeclarationContext.java <62:40 62:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<1> [ClassOrInterfaceDeclarationContext.java <54:92 54:101>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<1> [ClassOrInterfaceDeclarationContext.java <55:13 55:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbol<1> [ClassOrInterfaceDeclarationContext.java <62:46 62:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<0> [ClassOrInterfaceDeclarationContext.java <66:54 66:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<0> [ClassOrInterfaceDeclarationContext.java <69:51 69:54>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<0> [ClassOrInterfaceDeclarationContext.java <70:81 70:84>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<0> [ClassOrInterfaceDeclarationContext.java <74:47 74:50>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<1> [ClassOrInterfaceDeclarationContext.java <66:71 66:80>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<1> [ClassOrInterfaceDeclarationContext.java <67:13 67:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveSymbolAsValue<1> [ClassOrInterfaceDeclarationContext.java <74:53 74:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType<0> [ClassOrInterfaceDeclarationContext.java <88:62 88:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType<0> [ClassOrInterfaceDeclarationContext.java <89:59 89:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType<1> [ClassOrInterfaceDeclarationContext.java <88:79 88:88>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.contexts.ClassOrInterfaceDeclarationContext.solveType<1> [ClassOrInterfaceDeclarationContext.java <89:65 89:74>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <1:1 15:3>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <32:1 34:3>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <39:5 39:7>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <40:5 40:20>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <41:5 41:7>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <49:5 49:7>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <50:5 50:22>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <51:5 51:7>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <61:9 61:25>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <73:9 73:25>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <101:5 101:7>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <102:5 102:23>]
COMMENT: comment [ClassOrInterfaceDeclarationContext.java <103:5 103:7>]
