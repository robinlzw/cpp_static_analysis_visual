FILE: PrimitiveType.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem [PrimitiveType.java <17:50 17:59>]
QUALIFIER: com.github.javaparser.symbolsolver.model [PrimitiveType.java <17:44 17:48>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver [PrimitiveType.java <17:31 17:42>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [PrimitiveType.java <17:20 17:29>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [PrimitiveType.java <17:13 17:18>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [PrimitiveType.java <17:9 17:11>]
QUALIFIER: com [PrimitiveType.java <19:8 19:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.google.common.collect [PrimitiveType.java <19:26 19:32>]
SYMBOL_PACKAGE: com.google.common.collect
QUALIFIER: com.google.common [PrimitiveType.java <19:19 19:24>]
SYMBOL_PACKAGE: com.google.common
QUALIFIER: com.google [PrimitiveType.java <19:12 19:17>]
SYMBOL_PACKAGE: com.google
QUALIFIER: java.util [PrimitiveType.java <21:13 21:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [PrimitiveType.java <21:8 21:11>]
SYMBOL_PACKAGE: java
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <51:9 51:12>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <52:9 52:12>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <53:9 53:12>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <117:20 117:23>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <26:1 <26:14 26:26> 127:1>]
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <32:39 32:42>]
SYMBOL_METHOD: private com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <50:5 <50:5 <50:13 50:25> 50:95> 54:5>]
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>()
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <32:103 32:115>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <33:106 33:118>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <34:108 34:120>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <35:104 35:116>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <36:103 36:115>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <37:112 37:124>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <38:106 38:118>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <39:109 39:121>]
QUALIFIER: com.google.common.collect.ImmutableList [PrimitiveType.java <40:51 40:63>]
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT [PrimitiveType.java <33:39 33:43>]
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E)
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR [PrimitiveType.java <34:39 34:42>]
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT [PrimitiveType.java <35:39 35:41>]
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E)
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG [PrimitiveType.java <36:39 36:42>]
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E)
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN [PrimitiveType.java <37:39 37:45>]
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT [PrimitiveType.java <38:39 38:43>]
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E, E)
SYMBOL_FIELD: public static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE [PrimitiveType.java <39:39 39:44>]
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E, E, E)
SYMBOL_FIELD: public static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL [PrimitiveType.java <40:45 40:47>]
SYMBOL_METHOD: static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E, E, E, E, E)
SYMBOL_FIELD: private java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.name [PrimitiveType.java <46:20 46:23>]
SYMBOL_FIELD: private java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.boxTypeQName [PrimitiveType.java <47:20 47:31>]
SYMBOL_FIELD: private java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.promotionTypes [PrimitiveType.java <48:33 48:46>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) [PrimitiveType.java <56:5 <56:5 <56:24 56:29> 56:42> 64:5>]
SYMBOL_METHOD: java.lang.String java.lang.String.toLowerCase()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.describe() [PrimitiveType.java <92:5 <92:5 <93:19 93:26> 93:28> 95:5>]
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.toString() [PrimitiveType.java <66:5 <66:5 <67:19 67:26> 67:28> 71:5>]
SYMBOL_METHOD: java.lang.String java.lang.Object.toString()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.asPrimitive() [PrimitiveType.java <73:5 <73:5 <73:26 73:36> 73:38> 75:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isArray() [PrimitiveType.java <77:5 <77:5 <78:20 78:26> 78:28> 80:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray()
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isPrimitive() [PrimitiveType.java <82:5 <82:5 <83:20 83:30> 83:32> 85:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isReferenceType() [PrimitiveType.java <87:5 <87:5 <88:20 88:34> 88:36> 90:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType()
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isTypeVariable() [PrimitiveType.java <97:5 <97:5 <98:20 98:33> 98:35> 100:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [PrimitiveType.java <102:5 <102:5 <103:20 103:33> 103:45> 121:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_METHOD: boolean java.util.List<E>.contains(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType()
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.getBoxTypeQName() [PrimitiveType.java <123:5 <123:5 <123:19 123:33> 123:35> 125:5>]
REFERENCE_IMPORT: PrimitiveType.java -> com.google.common.collect.ImmutableList<E> [PrimitiveType.java <19:34 19:46>]
REFERENCE_IMPORT: PrimitiveType.java -> java.util.List<E> [PrimitiveType.java <21:18 21:21>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType -> com.github.javaparser.symbolsolver.model.typesystem.Type [PrimitiveType.java <26:39 26:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <32:25 32:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <32:50 32:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <32:50 32:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <32:83 32:98>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE -> java.lang.Byte [PrimitiveType.java <32:72 32:75>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>() [PrimitiveType.java <32:117 32:118>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <33:25 33:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <33:51 33:63>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <33:51 33:63>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <33:86 33:101>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> java.lang.Short [PrimitiveType.java <33:74 33:78>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E) [PrimitiveType.java <33:120 33:121>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <33:123 33:126>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <34:25 34:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <34:50 34:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <34:50 34:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <34:88 34:103>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR -> java.lang.Character [PrimitiveType.java <34:72 34:80>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>() [PrimitiveType.java <34:122 34:123>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <35:25 35:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <35:49 35:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <35:49 35:61>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <35:84 35:99>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> java.lang.Integer [PrimitiveType.java <35:70 35:76>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E) [PrimitiveType.java <35:118 35:119>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <35:121 35:124>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT [PrimitiveType.java <35:127 35:131>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR [PrimitiveType.java <35:134 35:137>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <36:25 36:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <36:50 36:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <36:50 36:62>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <36:83 36:98>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> java.lang.Long [PrimitiveType.java <36:72 36:75>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E) [PrimitiveType.java <36:117 36:118>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <36:120 36:123>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT [PrimitiveType.java <36:126 36:130>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT [PrimitiveType.java <36:133 36:135>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR [PrimitiveType.java <36:138 36:141>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <37:25 37:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <37:53 37:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <37:53 37:65>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <37:92 37:107>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN -> java.lang.Boolean [PrimitiveType.java <37:78 37:84>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>() [PrimitiveType.java <37:126 37:127>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <38:25 38:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <38:51 38:63>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <38:51 38:63>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <38:86 38:101>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> java.lang.Float [PrimitiveType.java <38:74 38:78>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E, E) [PrimitiveType.java <38:120 38:121>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG [PrimitiveType.java <38:123 38:126>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT [PrimitiveType.java <38:129 38:131>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT [PrimitiveType.java <38:134 38:138>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <38:141 38:144>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR [PrimitiveType.java <38:147 38:150>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <39:25 39:37>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <39:52 39:64>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) [PrimitiveType.java <39:52 39:64>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> java.lang.String java.lang.Class<T>.getCanonicalName() [PrimitiveType.java <39:89 39:104>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> java.lang.Double [PrimitiveType.java <39:76 39:81>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E, E, E) [PrimitiveType.java <39:123 39:124>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT [PrimitiveType.java <39:126 39:130>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG [PrimitiveType.java <39:133 39:136>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT [PrimitiveType.java <39:139 39:141>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT [PrimitiveType.java <39:144 39:148>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <39:151 39:154>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR [PrimitiveType.java <39:157 39:160>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <40:30 40:42>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <48:18 48:30>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <50:66 50:78>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> java.util.List<E> [PrimitiveType.java <40:25 40:28>]
REFERENCE_TYPE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <40:30 40:42>]
REFERENCE_CALL: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.google.common.collect.ImmutableList<E> com.google.common.collect.ImmutableList<E>.of<E>(E, E, E, E, E, E, E, E) [PrimitiveType.java <40:65 40:66>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.INT [PrimitiveType.java <40:68 40:70>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BOOLEAN [PrimitiveType.java <40:73 40:79>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.LONG [PrimitiveType.java <40:82 40:85>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.CHAR [PrimitiveType.java <40:88 40:91>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.FLOAT [PrimitiveType.java <40:94 40:98>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.DOUBLE [PrimitiveType.java <40:101 40:106>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.SHORT [PrimitiveType.java <40:109 40:113>]
REFERENCE_USAGE: static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL -> static com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.BYTE [PrimitiveType.java <40:116 40:119>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.name -> java.lang.String [PrimitiveType.java <46:13 46:18>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.boxTypeQName -> java.lang.String [PrimitiveType.java <47:13 47:18>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.promotionTypes -> java.util.List<E> [PrimitiveType.java <48:13 48:16>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.promotionTypes -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <48:18 48:30>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> java.lang.String [PrimitiveType.java <50:27 50:32>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> java.lang.String [PrimitiveType.java <50:40 50:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> java.util.List<E> [PrimitiveType.java <50:61 50:64>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <50:66 50:78>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.name [PrimitiveType.java <51:14 51:17>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.boxTypeQName [PrimitiveType.java <52:14 52:25>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType(java.lang.String, java.lang.String, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType>) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.promotionTypes [PrimitiveType.java <53:14 53:27>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> com.github.javaparser.symbolsolver.model.typesystem.Type [PrimitiveType.java <56:19 56:22>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> java.lang.String [PrimitiveType.java <56:31 56:36>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> java.lang.String java.lang.String.toLowerCase() [PrimitiveType.java <57:21 57:31>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <58:14 58:26>]
REFERENCE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> static java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.ALL [PrimitiveType.java <58:34 58:36>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> boolean java.lang.String.equals(java.lang.Object) [PrimitiveType.java <59:32 59:37>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.describe() [PrimitiveType.java <59:21 59:28>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [PrimitiveType.java <63:19 63:42>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName(java.lang.String) -> java.lang.IllegalArgumentException [PrimitiveType.java <63:19 63:42>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.toString() -> java.lang.String java.lang.Object.toString() [PrimitiveType.java <67:19 67:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.toString() -> java.lang.Override [PrimitiveType.java <66:6 66:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.toString() -> java.lang.String [PrimitiveType.java <67:12 67:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.toString() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.name [PrimitiveType.java <69:28 69:31>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.asPrimitive() -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() [PrimitiveType.java <73:26 73:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.asPrimitive() -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <73:12 73:24>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isArray() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isArray() [PrimitiveType.java <78:20 78:26>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isArray() -> java.lang.Override [PrimitiveType.java <77:6 77:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isArray() -> boolean [PrimitiveType.java <78:12 78:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isPrimitive() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [PrimitiveType.java <83:20 83:30>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isPrimitive() -> java.lang.Override [PrimitiveType.java <82:6 82:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isPrimitive() -> boolean [PrimitiveType.java <83:12 83:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isReferenceType() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [PrimitiveType.java <88:20 88:34>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isReferenceType() -> java.lang.Override [PrimitiveType.java <87:6 87:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isReferenceType() -> boolean [PrimitiveType.java <88:12 88:18>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.describe() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [PrimitiveType.java <93:19 93:26>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.describe() -> java.lang.Override [PrimitiveType.java <92:6 92:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.describe() -> java.lang.String [PrimitiveType.java <93:12 93:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.describe() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.name [PrimitiveType.java <94:16 94:19>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isTypeVariable() -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [PrimitiveType.java <98:20 98:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isTypeVariable() -> java.lang.Override [PrimitiveType.java <97:6 97:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isTypeVariable() -> boolean [PrimitiveType.java <98:12 98:18>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [PrimitiveType.java <103:20 103:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [PrimitiveType.java <102:6 102:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [PrimitiveType.java <103:12 103:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [PrimitiveType.java <103:35 103:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [PrimitiveType.java <104:19 104:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.util.List<E>.contains(java.lang.Object) [PrimitiveType.java <105:52 105:59>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.promotionTypes [PrimitiveType.java <105:37 105:50>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.promotionTypes [PrimitiveType.java <110:44 110:57>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isReferenceType() [PrimitiveType.java <106:26 106:40>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [PrimitiveType.java <107:60 107:65>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [PrimitiveType.java <111:64 111:69>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [PrimitiveType.java <107:41 107:56>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [PrimitiveType.java <111:45 111:60>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [PrimitiveType.java <107:23 107:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.Type.asReferenceType() [PrimitiveType.java <111:27 111:41>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.boxTypeQName [PrimitiveType.java <107:67 107:78>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.boxTypeQName [PrimitiveType.java <111:81 111:92>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType [PrimitiveType.java <110:18 110:30>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() [PrimitiveType.java <116:26 116:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [PrimitiveType.java <117:25 117:38>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound() [PrimitiveType.java <117:65 117:72>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() [PrimitiveType.java <117:46 117:61>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.getBoxTypeQName() -> java.lang.String [PrimitiveType.java <123:12 123:17>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.getBoxTypeQName() -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.boxTypeQName [PrimitiveType.java <124:16 124:27>]
LOCAL_SYMBOL: PrimitiveType.java<103:47> [PrimitiveType.java <103:47 103:47>]
LOCAL_SYMBOL: PrimitiveType.java<103:47> [PrimitiveType.java <121:5 121:5>]
LOCAL_SYMBOL: PrimitiveType.java<104:34> [PrimitiveType.java <104:34 104:34>]
LOCAL_SYMBOL: PrimitiveType.java<104:34> [PrimitiveType.java <106:9 106:9>]
LOCAL_SYMBOL: PrimitiveType.java<106:45> [PrimitiveType.java <106:45 106:45>]
LOCAL_SYMBOL: PrimitiveType.java<106:45> [PrimitiveType.java <116:9 116:9>]
LOCAL_SYMBOL: PrimitiveType.java<107:82> [PrimitiveType.java <107:82 107:82>]
LOCAL_SYMBOL: PrimitiveType.java<107:82> [PrimitiveType.java <109:13 109:13>]
LOCAL_SYMBOL: PrimitiveType.java<110:60> [PrimitiveType.java <110:60 110:60>]
LOCAL_SYMBOL: PrimitiveType.java<110:60> [PrimitiveType.java <114:13 114:13>]
LOCAL_SYMBOL: PrimitiveType.java<111:96> [PrimitiveType.java <111:96 111:96>]
LOCAL_SYMBOL: PrimitiveType.java<111:96> [PrimitiveType.java <113:17 113:17>]
LOCAL_SYMBOL: PrimitiveType.java<116:41> [PrimitiveType.java <116:41 116:41>]
LOCAL_SYMBOL: PrimitiveType.java<116:41> [PrimitiveType.java <118:9 118:9>]
LOCAL_SYMBOL: PrimitiveType.java<118:16> [PrimitiveType.java <118:16 118:16>]
LOCAL_SYMBOL: PrimitiveType.java<118:16> [PrimitiveType.java <120:9 120:9>]
LOCAL_SYMBOL: PrimitiveType.java<123:37> [PrimitiveType.java <123:37 123:37>]
LOCAL_SYMBOL: PrimitiveType.java<123:37> [PrimitiveType.java <125:5 125:5>]
LOCAL_SYMBOL: PrimitiveType.java<26:44> [PrimitiveType.java <26:44 26:44>]
LOCAL_SYMBOL: PrimitiveType.java<26:44> [PrimitiveType.java <127:1 127:1>]
LOCAL_SYMBOL: PrimitiveType.java<50:97> [PrimitiveType.java <50:97 50:97>]
LOCAL_SYMBOL: PrimitiveType.java<50:97> [PrimitiveType.java <54:5 54:5>]
LOCAL_SYMBOL: PrimitiveType.java<56:44> [PrimitiveType.java <56:44 56:44>]
LOCAL_SYMBOL: PrimitiveType.java<56:44> [PrimitiveType.java <64:5 64:5>]
LOCAL_SYMBOL: PrimitiveType.java<58:39> [PrimitiveType.java <58:39 58:39>]
LOCAL_SYMBOL: PrimitiveType.java<58:39> [PrimitiveType.java <62:9 62:9>]
LOCAL_SYMBOL: PrimitiveType.java<59:46> [PrimitiveType.java <59:46 59:46>]
LOCAL_SYMBOL: PrimitiveType.java<59:46> [PrimitiveType.java <61:13 61:13>]
LOCAL_SYMBOL: PrimitiveType.java<67:30> [PrimitiveType.java <67:30 67:30>]
LOCAL_SYMBOL: PrimitiveType.java<67:30> [PrimitiveType.java <71:5 71:5>]
LOCAL_SYMBOL: PrimitiveType.java<73:40> [PrimitiveType.java <73:40 73:40>]
LOCAL_SYMBOL: PrimitiveType.java<73:40> [PrimitiveType.java <75:5 75:5>]
LOCAL_SYMBOL: PrimitiveType.java<78:30> [PrimitiveType.java <78:30 78:30>]
LOCAL_SYMBOL: PrimitiveType.java<78:30> [PrimitiveType.java <80:5 80:5>]
LOCAL_SYMBOL: PrimitiveType.java<83:34> [PrimitiveType.java <83:34 83:34>]
LOCAL_SYMBOL: PrimitiveType.java<83:34> [PrimitiveType.java <85:5 85:5>]
LOCAL_SYMBOL: PrimitiveType.java<88:38> [PrimitiveType.java <88:38 88:38>]
LOCAL_SYMBOL: PrimitiveType.java<88:38> [PrimitiveType.java <90:5 90:5>]
LOCAL_SYMBOL: PrimitiveType.java<93:30> [PrimitiveType.java <93:30 93:30>]
LOCAL_SYMBOL: PrimitiveType.java<93:30> [PrimitiveType.java <95:5 95:5>]
LOCAL_SYMBOL: PrimitiveType.java<98:37> [PrimitiveType.java <98:37 98:37>]
LOCAL_SYMBOL: PrimitiveType.java<98:37> [PrimitiveType.java <100:5 100:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType<0> [PrimitiveType.java <50:34 50:37>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType<0> [PrimitiveType.java <51:21 51:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType<1> [PrimitiveType.java <50:47 50:58>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType<1> [PrimitiveType.java <52:29 52:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType<2> [PrimitiveType.java <50:81 50:94>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.PrimitiveType<2> [PrimitiveType.java <53:31 53:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<0> [PrimitiveType.java <56:38 56:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<0> [PrimitiveType.java <57:9 57:12>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<0> [PrimitiveType.java <57:16 57:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<0> [PrimitiveType.java <59:39 59:42>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<0> [PrimitiveType.java <63:54 63:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<1> [PrimitiveType.java <58:28 58:30>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<1> [PrimitiveType.java <59:17 59:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.byName<1> [PrimitiveType.java <60:24 60:26>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <103:40 103:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <104:13 104:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <105:28 105:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <105:61 105:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <106:20 106:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <107:17 107:21>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <111:21 111:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <116:20 116:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<0> [PrimitiveType.java <117:40 117:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<1> [PrimitiveType.java <110:32 110:40>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.isAssignableBy<1> [PrimitiveType.java <111:71 111:79>]
COMMENT: comment [PrimitiveType.java <1:1 15:3>]
COMMENT: comment [PrimitiveType.java <23:1 25:3>]
COMMENT: comment [PrimitiveType.java <28:5 28:7>]
COMMENT: comment [PrimitiveType.java <29:5 29:17>]
COMMENT: comment [PrimitiveType.java <30:5 30:7>]
COMMENT: comment [PrimitiveType.java <42:5 42:7>]
COMMENT: comment [PrimitiveType.java <43:5 43:14>]
COMMENT: comment [PrimitiveType.java <44:5 44:7>]
