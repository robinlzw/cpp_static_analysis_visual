FILE: ReferenceTypeImpl.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.typesystem [ReferenceTypeImpl.java <17:50 17:59>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <17:44 17:48>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <21:43 21:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <22:43 22:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <23:43 23:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <24:43 24:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <25:43 25:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <26:43 26:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [ReferenceTypeImpl.java <27:43 27:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <20:30 20:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <21:30 21:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <22:30 22:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <23:30 23:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <24:30 24:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <25:30 25:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <26:30 26:41>]
QUALIFIER: com.github.javaparser.symbolsolver [ReferenceTypeImpl.java <27:30 27:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <21:19 21:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <22:19 22:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <23:19 23:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <24:19 24:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <25:19 25:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <26:19 26:28>]
QUALIFIER: com.github.javaparser [ReferenceTypeImpl.java <27:19 27:28>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [ReferenceTypeImpl.java <17:13 17:18>]
QUALIFIER: com.github [ReferenceTypeImpl.java <19:12 19:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <20:12 20:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <21:12 21:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <22:12 22:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <23:12 23:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <24:12 24:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <25:12 25:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <26:12 26:17>]
QUALIFIER: com.github [ReferenceTypeImpl.java <27:12 27:17>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [ReferenceTypeImpl.java <17:9 17:11>]
QUALIFIER: com [ReferenceTypeImpl.java <19:8 19:10>]
QUALIFIER: com [ReferenceTypeImpl.java <20:8 20:10>]
QUALIFIER: com [ReferenceTypeImpl.java <21:8 21:10>]
QUALIFIER: com [ReferenceTypeImpl.java <22:8 22:10>]
QUALIFIER: com [ReferenceTypeImpl.java <23:8 23:10>]
QUALIFIER: com [ReferenceTypeImpl.java <24:8 24:10>]
QUALIFIER: com [ReferenceTypeImpl.java <25:8 25:10>]
QUALIFIER: com [ReferenceTypeImpl.java <26:8 26:10>]
QUALIFIER: com [ReferenceTypeImpl.java <27:8 27:10>]
SYMBOL_PACKAGE: com
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ReferenceTypeImpl.java <19:43 19:57>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [ReferenceTypeImpl.java <20:43 20:57>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations [ReferenceTypeImpl.java <20:59 20:70>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReferenceTypeImpl.java <21:49 21:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReferenceTypeImpl.java <22:49 22:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReferenceTypeImpl.java <23:49 23:60>]
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations [ReferenceTypeImpl.java <24:49 24:60>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReferenceTypeImpl.java <24:62 24:85>]
QUALIFIER: com.github.javaparser.symbolsolver.model.methods [ReferenceTypeImpl.java <25:49 25:55>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.methods
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReferenceTypeImpl.java <26:49 26:58>]
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [ReferenceTypeImpl.java <27:49 27:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: java.util [ReferenceTypeImpl.java <29:13 29:16>]
QUALIFIER: java.util [ReferenceTypeImpl.java <30:13 30:16>]
QUALIFIER: java.util [ReferenceTypeImpl.java <31:13 31:16>]
QUALIFIER: java.util [ReferenceTypeImpl.java <32:13 32:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [ReferenceTypeImpl.java <29:8 29:11>]
QUALIFIER: java [ReferenceTypeImpl.java <30:8 30:11>]
QUALIFIER: java [ReferenceTypeImpl.java <31:8 31:11>]
QUALIFIER: java [ReferenceTypeImpl.java <32:8 32:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.stream.Collectors [ReferenceTypeImpl.java <44:19 44:28>]
QUALIFIER: java.util.stream [ReferenceTypeImpl.java <32:18 32:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <67:13 67:16>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <68:119 68:122>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <71:49 71:52>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <80:21 80:24>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <83:32 83:35>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <88:17 88:20>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <100:20 100:23>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <115:25 115:28>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <124:17 124:20>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <37:1 <39:14 39:30> 148:1>]
QUALIFIER: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReferenceTypeImpl.java <96:75 96:79>]
SYMBOL_METHOD: public static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <41:5 <41:5 <41:33 41:54> 41:119> 45:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <61:5 <61:5 <61:12 61:28> 61:120> 63:5>]
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <47:5 <47:5 <48:29 48:34> 48:135> 50:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: protected com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <52:5 <52:5 <53:29 53:34> 53:99> 55:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <57:5 <57:5 <57:12 57:28> 57:93> 59:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.ReferenceType(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.ReferenceType(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() [ReferenceTypeImpl.java <65:5 <65:5 <66:37 66:51> 66:53> 72:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter()
SYMBOL_FIELD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeDeclaration
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter()
SYMBOL_METHOD: java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)
SYMBOL_METHOD: java.lang.String java.lang.Class<T>.getCanonicalName()
SYMBOL_METHOD: java.lang.Class<?> java.lang.Object.getClass()
SYMBOL_METHOD: public boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReferenceTypeImpl.java <77:1 <77:1 <78:20 78:33> 78:45> 134:5>]
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type)
SYMBOL_BUILTIN_TYPE: boolean
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isVoid()
SYMBOL_METHOD: boolean java.lang.String.equals(java.lang.Object)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isCorrespondingBoxingType(java.lang.String)
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String)
SYMBOL_FIELD: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeSolver
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.getBoxTypeQName()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasAnnotation(java.lang.String)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.compareConsideringTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType)
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllAncestors()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable()
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.isExtends()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard()
SYMBOL_METHOD: boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType()
SYMBOL_METHOD: public java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() [ReferenceTypeImpl.java <136:5 <136:5 <137:29 137:46> 137:48> 145:5>]
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getDeclaredMethods()
SYMBOL_METHOD: java.util.HashSet<E>.HashSet()
SYMBOL_METHOD: java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration)
SYMBOL_METHOD: boolean java.util.Set<E>.add(java.util.Set<E>.E)
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [ReferenceTypeImpl.java <19:59 19:87>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ReferenceTypeImpl.java <20:72 20:104>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReferenceTypeImpl.java <21:62 21:78>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <22:62 22:85>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReferenceTypeImpl.java <23:62 23:85>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ReferenceTypeImpl.java <24:87 24:91>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <25:57 25:67>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReferenceTypeImpl.java <26:60 26:74>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReferenceTypeImpl.java <27:60 27:69>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> java.util.HashSet<E> [ReferenceTypeImpl.java <29:18 29:24>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> java.util.List<E> [ReferenceTypeImpl.java <30:18 30:21>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> java.util.Set<E> [ReferenceTypeImpl.java <31:18 31:20>]
REFERENCE_IMPORT: ReferenceTypeImpl.java -> java.util.stream.Collectors [ReferenceTypeImpl.java <32:25 32:34>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReferenceTypeImpl.java <39:40 39:52>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReferenceTypeImpl.java <41:19 41:31>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <41:56 41:79>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReferenceTypeImpl.java <41:98 41:107>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <42:20 42:36>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <42:20 42:36>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [ReferenceTypeImpl.java <44:11 44:17>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [ReferenceTypeImpl.java <42:100 42:102>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [ReferenceTypeImpl.java <42:91 42:96>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [ReferenceTypeImpl.java <42:71 42:87>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.TypeVariable(com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration) [ReferenceTypeImpl.java <43:27 43:38>]
REFERENCE_TYPE_USAGE: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable [ReferenceTypeImpl.java <43:27 43:38>]
REFERENCE_CALL: static com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [ReferenceTypeImpl.java <44:30 44:35>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <48:29 48:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ReferenceTypeImpl.java <47:6 47:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReferenceTypeImpl.java <48:15 48:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <48:36 48:59>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReferenceTypeImpl.java <48:83 48:86>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReferenceTypeImpl.java <61:77 61:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ReferenceTypeImpl.java <48:78 48:81>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReferenceTypeImpl.java <48:83 48:86>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReferenceTypeImpl.java <48:114 48:123>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <49:20 49:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <49:20 49:36>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <53:29 53:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.lang.Override [ReferenceTypeImpl.java <52:6 52:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReferenceTypeImpl.java <53:15 53:27>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <53:36 53:59>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReferenceTypeImpl.java <53:78 53:87>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <54:20 54:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceType com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <54:20 54:36>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.ReferenceType(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <57:12 57:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <57:30 57:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReferenceTypeImpl.java <57:72 57:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.ReferenceType(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <58:9 58:13>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.ReferenceType(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <61:12 61:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <61:30 61:53>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> java.util.List<E> [ReferenceTypeImpl.java <61:72 61:75>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReferenceTypeImpl.java <61:77 61:80>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [ReferenceTypeImpl.java <61:99 61:108>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.ReferenceType(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration, java.util.List<com.github.javaparser.symbolsolver.model.typesystem.Type>, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <62:9 62:13>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeParameter() [ReferenceTypeImpl.java <66:37 66:51>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> java.lang.Override [ReferenceTypeImpl.java <65:6 65:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [ReferenceTypeImpl.java <66:12 66:35>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeDeclaration [ReferenceTypeImpl.java <67:18 67:32>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeDeclaration [ReferenceTypeImpl.java <68:124 68:138>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeDeclaration [ReferenceTypeImpl.java <71:54 71:68>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ReferenceTypeImpl.java <67:45 67:77>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ReferenceTypeImpl.java <68:13 68:45>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration [ReferenceTypeImpl.java <68:84 68:116>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclaration.asTypeParameter() [ReferenceTypeImpl.java <69:54 69:68>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String) [ReferenceTypeImpl.java <71:19 71:47>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> java.lang.UnsupportedOperationException [ReferenceTypeImpl.java <71:19 71:47>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReferenceTypeImpl.java <71:81 71:96>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter() -> java.lang.Class<?> java.lang.Object.getClass() [ReferenceTypeImpl.java <71:70 71:77>]
REFERENCE_OVERRIDE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReferenceTypeImpl.java <78:20 78:33>]
REFERENCE_ANNOTATION_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Override [ReferenceTypeImpl.java <77:6 77:13>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean [ReferenceTypeImpl.java <78:12 78:18>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type [ReferenceTypeImpl.java <78:35 78:38>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.NullType [ReferenceTypeImpl.java <79:30 79:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ReferenceTypeImpl.java <80:26 80:36>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isPrimitive() [ReferenceTypeImpl.java <87:19 87:29>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isVoid() [ReferenceTypeImpl.java <83:20 83:25>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [ReferenceTypeImpl.java <83:56 83:61>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [ReferenceTypeImpl.java <88:41 88:46>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean java.lang.String.equals(java.lang.Object) [ReferenceTypeImpl.java <124:41 124:46>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [ReferenceTypeImpl.java <83:37 83:52>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [ReferenceTypeImpl.java <88:22 88:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getQualifiedName() [ReferenceTypeImpl.java <124:22 124:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReferenceTypeImpl.java <83:76 83:91>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReferenceTypeImpl.java <88:61 88:76>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReferenceTypeImpl.java <100:86 100:101>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String java.lang.Class<T>.getCanonicalName() [ReferenceTypeImpl.java <124:61 124:76>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Object [ReferenceTypeImpl.java <83:63 83:68>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Object [ReferenceTypeImpl.java <88:48 88:53>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.Object [ReferenceTypeImpl.java <124:48 124:53>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.isCorrespondingBoxingType(java.lang.String) [ReferenceTypeImpl.java <92:21 92:45>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.Type.describe() [ReferenceTypeImpl.java <92:53 92:60>]
REFERENCE_TYPE_ARGUMENT: com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <95:33 95:56>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S> [ReferenceTypeImpl.java <95:17 95:31>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration [ReferenceTypeImpl.java <95:33 95:56>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration> com.github.javaparser.symbolsolver.model.resolution.TypeSolver.tryToSolveType(java.lang.String) [ReferenceTypeImpl.java <95:77 95:90>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeSolver [ReferenceTypeImpl.java <95:66 95:75>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeSolver [ReferenceTypeImpl.java <113:83 113:92>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.String com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType.getBoxTypeQName() [ReferenceTypeImpl.java <95:112 95:126>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.PrimitiveType com.github.javaparser.symbolsolver.model.typesystem.Type.asPrimitive() [ReferenceTypeImpl.java <95:98 95:108>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.canBeAssignedTo(com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration) [ReferenceTypeImpl.java <96:59 96:73>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.S com.github.javaparser.symbolsolver.model.resolution.SymbolReference<S>.getCorrespondingDeclaration() [ReferenceTypeImpl.java <96:29 96:55>]
REFERENCE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.typeDeclaration [ReferenceTypeImpl.java <96:81 96:95>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.javaparsermodel.LambdaArgumentTypePlaceholder [ReferenceTypeImpl.java <99:30 99:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.hasAnnotation(java.lang.String) [ReferenceTypeImpl.java <100:46 100:58>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReferenceTypeImpl.java <100:25 100:42>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.lang.FunctionalInterface [ReferenceTypeImpl.java <100:60 100:78>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <101:37 101:53>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <102:13 102:29>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl [ReferenceTypeImpl.java <102:43 102:59>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.compareConsideringTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType) [ReferenceTypeImpl.java <103:17 103:48>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.compareConsideringTypeParameters(com.github.javaparser.symbolsolver.model.typesystem.ReferenceType) [ReferenceTypeImpl.java <107:21 107:52>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType [ReferenceTypeImpl.java <106:18 106:30>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<com.github.javaparser.symbolsolver.model.typesystem.ReferenceType> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getAllAncestors() [ReferenceTypeImpl.java <106:57 106:71>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isTypeVariable() [ReferenceTypeImpl.java <112:26 112:39>]
REFERENCE_TYPE_USAGE: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound [ReferenceTypeImpl.java <113:18 113:22>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.getBounds(com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [ReferenceTypeImpl.java <113:73 113:81>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration com.github.javaparser.symbolsolver.model.typesystem.TypeVariable.asTypeParameter() [ReferenceTypeImpl.java <113:55 113:69>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.TypeVariable com.github.javaparser.symbolsolver.model.typesystem.Type.asTypeVariable() [ReferenceTypeImpl.java <113:38 113:51>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.isExtends() [ReferenceTypeImpl.java <114:27 114:35>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReferenceTypeImpl.java <115:30 115:43>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReferenceTypeImpl.java <122:20 122:33>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) [ReferenceTypeImpl.java <127:24 127:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration.Bound.getType() [ReferenceTypeImpl.java <115:51 115:57>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isConstraint() [ReferenceTypeImpl.java <121:26 121:37>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType.getBound() [ReferenceTypeImpl.java <122:60 122:67>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.LambdaConstraintType com.github.javaparser.symbolsolver.model.typesystem.Type.asConstraintType() [ReferenceTypeImpl.java <122:41 122:56>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Type.isWildcard() [ReferenceTypeImpl.java <123:26 123:35>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> boolean com.github.javaparser.symbolsolver.model.typesystem.Wildcard.isExtends() [ReferenceTypeImpl.java <126:43 126:51>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ReferenceTypeImpl.java <126:30 126:39>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Wildcard com.github.javaparser.symbolsolver.model.typesystem.Type.asWildcard() [ReferenceTypeImpl.java <127:45 127:54>]
REFERENCE_CALL: boolean com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy(com.github.javaparser.symbolsolver.model.typesystem.Type) -> com.github.javaparser.symbolsolver.model.typesystem.Type com.github.javaparser.symbolsolver.model.typesystem.Wildcard.getBoundedType() [ReferenceTypeImpl.java <127:58 127:71>]
REFERENCE_OVERRIDE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getDeclaredMethods() [ReferenceTypeImpl.java <137:29 137:46>]
REFERENCE_ANNOTATION_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.lang.Override [ReferenceTypeImpl.java <136:6 136:13>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <137:16 137:26>]
REFERENCE_TYPE_ARGUMENT: java.util.Set<E> -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <139:13 139:23>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.util.Set<E> [ReferenceTypeImpl.java <137:12 137:14>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.util.Set<E> [ReferenceTypeImpl.java <139:9 139:11>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <137:16 137:26>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <139:13 139:23>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <141:13 141:23>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.methods.MethodUsage [ReferenceTypeImpl.java <141:43 141:53>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.util.HashSet<E>.HashSet() [ReferenceTypeImpl.java <139:40 139:48>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.util.HashSet<E> [ReferenceTypeImpl.java <139:40 139:46>]
REFERENCE_TYPE_USAGE: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration [ReferenceTypeImpl.java <140:14 140:30>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> java.util.Set<com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration.getDeclaredMethods() [ReferenceTypeImpl.java <140:73 140:90>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.declarations.ReferenceTypeDeclaration com.github.javaparser.symbolsolver.model.typesystem.ReferenceType.getTypeDeclaration() [ReferenceTypeImpl.java <140:52 140:69>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> com.github.javaparser.symbolsolver.model.methods.MethodUsage.MethodUsage(com.github.javaparser.symbolsolver.model.declarations.MethodDeclaration) [ReferenceTypeImpl.java <141:43 141:53>]
REFERENCE_CALL: java.util.Set<com.github.javaparser.symbolsolver.model.methods.MethodUsage> com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods() -> boolean java.util.Set<E>.add(java.util.Set<E>.E) [ReferenceTypeImpl.java <142:21 142:23>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<101:56> [ReferenceTypeImpl.java <101:56 101:56>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<101:56> [ReferenceTypeImpl.java <112:9 112:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<103:61> [ReferenceTypeImpl.java <103:61 103:61>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<103:61> [ReferenceTypeImpl.java <105:13 105:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<106:76> [ReferenceTypeImpl.java <106:76 106:76>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<106:76> [ReferenceTypeImpl.java <110:13 110:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<107:70> [ReferenceTypeImpl.java <107:70 107:70>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<107:70> [ReferenceTypeImpl.java <109:17 109:17>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<112:44> [ReferenceTypeImpl.java <112:44 112:44>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<112:44> [ReferenceTypeImpl.java <121:9 121:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<113:96> [ReferenceTypeImpl.java <113:96 113:96>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<113:96> [ReferenceTypeImpl.java <119:13 119:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<114:40> [ReferenceTypeImpl.java <114:40 114:40>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<114:40> [ReferenceTypeImpl.java <118:17 118:17>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<115:63> [ReferenceTypeImpl.java <115:63 115:63>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<115:63> [ReferenceTypeImpl.java <117:21 117:21>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<121:41> [ReferenceTypeImpl.java <121:41 121:41>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<121:41> [ReferenceTypeImpl.java <123:9 123:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<123:40> [ReferenceTypeImpl.java <123:40 123:40>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<123:40> [ReferenceTypeImpl.java <131:9 131:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<124:82> [ReferenceTypeImpl.java <124:82 124:82>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<124:82> [ReferenceTypeImpl.java <126:13 126:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<126:56> [ReferenceTypeImpl.java <126:56 126:56>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<126:56> [ReferenceTypeImpl.java <128:13 128:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<128:20> [ReferenceTypeImpl.java <128:20 128:20>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<128:20> [ReferenceTypeImpl.java <130:13 130:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<131:16> [ReferenceTypeImpl.java <131:16 131:16>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<131:16> [ReferenceTypeImpl.java <133:9 133:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<137:50> [ReferenceTypeImpl.java <137:50 137:50>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<137:50> [ReferenceTypeImpl.java <145:5 145:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<140:95> [ReferenceTypeImpl.java <140:95 140:95>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<140:95> [ReferenceTypeImpl.java <143:9 143:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<39:54> [ReferenceTypeImpl.java <39:54 39:54>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<39:54> [ReferenceTypeImpl.java <148:1 148:1>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<41:121> [ReferenceTypeImpl.java <41:121 41:121>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<41:121> [ReferenceTypeImpl.java <45:5 45:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<48:137> [ReferenceTypeImpl.java <48:137 48:137>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<48:137> [ReferenceTypeImpl.java <50:5 50:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<53:101> [ReferenceTypeImpl.java <53:101 53:101>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<53:101> [ReferenceTypeImpl.java <55:5 55:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<57:95> [ReferenceTypeImpl.java <57:95 57:95>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<57:95> [ReferenceTypeImpl.java <59:5 59:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<61:122> [ReferenceTypeImpl.java <61:122 61:122>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<61:122> [ReferenceTypeImpl.java <63:5 63:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<66:55> [ReferenceTypeImpl.java <66:55 66:55>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<66:55> [ReferenceTypeImpl.java <72:5 72:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<67:80> [ReferenceTypeImpl.java <67:80 67:80>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<67:80> [ReferenceTypeImpl.java <70:9 70:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<78:47> [ReferenceTypeImpl.java <78:47 78:47>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<78:47> [ReferenceTypeImpl.java <134:5 134:5>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<79:40> [ReferenceTypeImpl.java <79:40 79:40>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<79:40> [ReferenceTypeImpl.java <81:9 81:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<83:97> [ReferenceTypeImpl.java <83:97 83:97>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<83:97> [ReferenceTypeImpl.java <85:9 85:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<87:34> [ReferenceTypeImpl.java <87:34 87:34>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<87:34> [ReferenceTypeImpl.java <98:9 98:9>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<88:82> [ReferenceTypeImpl.java <88:82 88:82>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<88:82> [ReferenceTypeImpl.java <90:13 90:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<90:20> [ReferenceTypeImpl.java <90:20 90:20>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<90:20> [ReferenceTypeImpl.java <97:13 97:13>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<99:61> [ReferenceTypeImpl.java <99:61 99:61>]
LOCAL_SYMBOL: ReferenceTypeImpl.java<99:61> [ReferenceTypeImpl.java <101:9 101:9>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<0> [ReferenceTypeImpl.java <57:55 57:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<0> [ReferenceTypeImpl.java <58:15 58:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<0> [ReferenceTypeImpl.java <61:55 61:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<0> [ReferenceTypeImpl.java <62:15 62:29>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<1> [ReferenceTypeImpl.java <57:83 57:92>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<1> [ReferenceTypeImpl.java <58:32 58:41>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<1> [ReferenceTypeImpl.java <61:83 61:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<1> [ReferenceTypeImpl.java <62:32 62:45>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<2> [ReferenceTypeImpl.java <61:110 61:119>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.ReferenceTypeImpl<2> [ReferenceTypeImpl.java <62:48 62:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter<0> [ReferenceTypeImpl.java <68:47 68:79>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.asTypeParameter<0> [ReferenceTypeImpl.java <69:20 69:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<0> [ReferenceTypeImpl.java <48:61 48:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<0> [ReferenceTypeImpl.java <49:38 49:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<0> [ReferenceTypeImpl.java <53:61 53:75>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<0> [ReferenceTypeImpl.java <54:38 54:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<1> [ReferenceTypeImpl.java <48:89 48:111>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<1> [ReferenceTypeImpl.java <49:55 49:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<1> [ReferenceTypeImpl.java <53:89 53:98>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<1> [ReferenceTypeImpl.java <54:55 54:64>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<2> [ReferenceTypeImpl.java <48:125 48:134>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.create<2> [ReferenceTypeImpl.java <49:80 49:89>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<0> [ReferenceTypeImpl.java <139:26 139:32>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<0> [ReferenceTypeImpl.java <142:13 142:19>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<0> [ReferenceTypeImpl.java <144:16 144:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<1> [ReferenceTypeImpl.java <140:32 140:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<1> [ReferenceTypeImpl.java <141:55 141:71>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<3> [ReferenceTypeImpl.java <141:25 141:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.getDeclaredMethods<3> [ReferenceTypeImpl.java <142:25 142:35>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <78:40 78:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <79:13 79:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <83:14 83:18>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <87:13 87:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <92:47 92:51>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <95:92 95:96>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <99:13 99:17>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <101:20 101:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <102:62 102:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <112:20 112:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <113:32 113:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <121:20 121:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <122:35 122:39>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <123:20 123:24>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <126:24 126:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<0> [ReferenceTypeImpl.java <127:39 127:43>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<1> [ReferenceTypeImpl.java <95:59 95:62>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<1> [ReferenceTypeImpl.java <96:24 96:27>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<2> [ReferenceTypeImpl.java <102:31 102:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<2> [ReferenceTypeImpl.java <103:50 103:57>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<2> [ReferenceTypeImpl.java <106:48 106:55>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<3> [ReferenceTypeImpl.java <106:32 106:44>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<3> [ReferenceTypeImpl.java <107:54 107:66>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<5> [ReferenceTypeImpl.java <113:24 113:28>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<5> [ReferenceTypeImpl.java <114:21 114:25>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.isAssignableBy<5> [ReferenceTypeImpl.java <115:45 115:49>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters<0> [ReferenceTypeImpl.java <41:81 41:95>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters<0> [ReferenceTypeImpl.java <42:38 42:52>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters<0> [ReferenceTypeImpl.java <42:55 42:69>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters<1> [ReferenceTypeImpl.java <41:109 41:118>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeImpl.undeterminedParameters<1> [ReferenceTypeImpl.java <44:41 44:50>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<3> [ReferenceTypeImpl.java <43:17 43:18>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<3> [ReferenceTypeImpl.java <43:40 43:41>]
COMMENT: comment [ReferenceTypeImpl.java <1:1 15:3>]
COMMENT: comment [ReferenceTypeImpl.java <34:1 36:3>]
COMMENT: comment [ReferenceTypeImpl.java <37:1 37:106>]
COMMENT: comment [ReferenceTypeImpl.java <38:1 38:46>]
COMMENT: comment [ReferenceTypeImpl.java <74:5 76:7>]
COMMENT: comment [ReferenceTypeImpl.java <82:9 82:57>]
COMMENT: comment [ReferenceTypeImpl.java <86:9 86:26>]
COMMENT: comment [ReferenceTypeImpl.java <91:17 91:67>]
COMMENT: comment [ReferenceTypeImpl.java <94:17 94:107>]
COMMENT: comment [ReferenceTypeImpl.java <138:9 138:33>]
