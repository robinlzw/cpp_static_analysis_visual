FILE: JavaParserConstructorDeclaration.java
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations [JavaParserConstructorDeclaration.java <17:60 17:71>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel [JavaParserConstructorDeclaration.java <17:44 17:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.javaparsermodel
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserConstructorDeclaration.java <17:31 17:42>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserConstructorDeclaration.java <19:30 19:41>]
QUALIFIER: com.github.javaparser.symbolsolver [JavaParserConstructorDeclaration.java <20:30 20:41>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver
QUALIFIER: com.github.javaparser [JavaParserConstructorDeclaration.java <17:20 17:29>]
QUALIFIER: com.github.javaparser [JavaParserConstructorDeclaration.java <19:19 19:28>]
QUALIFIER: com.github.javaparser [JavaParserConstructorDeclaration.java <20:19 20:28>]
QUALIFIER: com.github.javaparser [JavaParserConstructorDeclaration.java <31:24 31:33>]
QUALIFIER: com.github.javaparser [JavaParserConstructorDeclaration.java <34:91 34:100>]
QUALIFIER: com.github.javaparser [JavaParserConstructorDeclaration.java <69:23 69:32>]
SYMBOL_PACKAGE: com.github.javaparser
QUALIFIER: com.github [JavaParserConstructorDeclaration.java <17:13 17:18>]
QUALIFIER: com.github [JavaParserConstructorDeclaration.java <19:12 19:17>]
QUALIFIER: com.github [JavaParserConstructorDeclaration.java <20:12 20:17>]
QUALIFIER: com.github [JavaParserConstructorDeclaration.java <31:17 31:22>]
QUALIFIER: com.github [JavaParserConstructorDeclaration.java <34:84 34:89>]
QUALIFIER: com.github [JavaParserConstructorDeclaration.java <69:16 69:21>]
SYMBOL_PACKAGE: com.github
QUALIFIER: com [JavaParserConstructorDeclaration.java <17:9 17:11>]
QUALIFIER: com [JavaParserConstructorDeclaration.java <19:8 19:10>]
QUALIFIER: com [JavaParserConstructorDeclaration.java <20:8 20:10>]
QUALIFIER: com [JavaParserConstructorDeclaration.java <31:13 31:15>]
QUALIFIER: com [JavaParserConstructorDeclaration.java <34:80 34:82>]
QUALIFIER: com [JavaParserConstructorDeclaration.java <69:12 69:14>]
SYMBOL_PACKAGE: com
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.declarations
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserConstructorDeclaration.java <19:43 19:47>]
QUALIFIER: com.github.javaparser.symbolsolver.model [JavaParserConstructorDeclaration.java <20:43 20:47>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model
QUALIFIER: com.github.javaparser.symbolsolver.model.resolution [JavaParserConstructorDeclaration.java <20:49 20:58>]
SYMBOL_PACKAGE: com.github.javaparser.symbolsolver.model.resolution
QUALIFIER: java.util [JavaParserConstructorDeclaration.java <22:13 22:16>]
QUALIFIER: java.util [JavaParserConstructorDeclaration.java <23:13 23:16>]
SYMBOL_PACKAGE: java.util
QUALIFIER: java [JavaParserConstructorDeclaration.java <22:8 22:11>]
QUALIFIER: java [JavaParserConstructorDeclaration.java <23:8 23:11>]
SYMBOL_PACKAGE: java
QUALIFIER: java.util.stream.Collectors [JavaParserConstructorDeclaration.java <80:133 80:142>]
QUALIFIER: java.util.stream [JavaParserConstructorDeclaration.java <23:18 23:23>]
SYMBOL_PACKAGE: java.util.stream
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <36:9 36:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <37:9 37:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <38:9 38:12>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <48:16 48:19>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <61:16 61:19>]
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <80:16 80:19>]
SYMBOL_CLASS: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration [JavaParserConstructorDeclaration.java <28:1 <28:14 28:45> 82:1>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.classDeclaration [JavaParserConstructorDeclaration.java <30:30 30:45>]
SYMBOL_FIELD: private com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <31:67 31:77>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserConstructorDeclaration.java <31:39 31:42>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserConstructorDeclaration.java <34:106 34:109>]
QUALIFIER: com.github.javaparser.ast.body [JavaParserConstructorDeclaration.java <69:38 69:41>]
QUALIFIER: com.github.javaparser.ast [JavaParserConstructorDeclaration.java <31:35 31:37>]
QUALIFIER: com.github.javaparser.ast [JavaParserConstructorDeclaration.java <34:102 34:104>]
QUALIFIER: com.github.javaparser.ast [JavaParserConstructorDeclaration.java <69:34 69:36>]
SYMBOL_FIELD: private com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.typeSolver [JavaParserConstructorDeclaration.java <32:24 32:33>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserConstructorDeclaration.java <34:5 <34:5 <34:12 34:43> 35:66> 39:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.declaringType() [JavaParserConstructorDeclaration.java <41:5 <41:5 <42:29 42:41> 42:43> 44:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration.declaringType()
SYMBOL_PACKAGE: java.lang
SYMBOL_METHOD: public int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() [JavaParserConstructorDeclaration.java <46:5 <46:5 <47:16 47:32> 47:34> 49:5>]
SYMBOL_METHOD: int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams()
SYMBOL_BUILTIN_TYPE: int
SYMBOL_METHOD: int com.github.javaparser.ast.NodeList<N>.size()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getParameters()
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) [JavaParserConstructorDeclaration.java <51:5 <51:5 <52:33 52:40> 52:47> 57:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int)
SYMBOL_METHOD: java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)
SYMBOL_METHOD: static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object)
QUALIFIER: java.lang.String [JavaParserConstructorDeclaration.java <54:48 54:53>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.JavaParserParameterDeclaration(com.github.javaparser.ast.body.Parameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int)
SYMBOL_METHOD: public java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getName() [JavaParserConstructorDeclaration.java <59:5 <59:5 <60:19 60:25> 60:27> 62:5>]
SYMBOL_METHOD: java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName()
SYMBOL_METHOD: public com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getWrappedNode() [JavaParserConstructorDeclaration.java <69:1 <69:1 <69:66 69:79> 69:81> 71:5>]
SYMBOL_METHOD: public com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() [JavaParserConstructorDeclaration.java <73:5 <73:5 <74:24 74:34> 74:36> 76:5>]
SYMBOL_METHOD: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel()
SYMBOL_METHOD: static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.toAccessLevel(java.util.EnumSet<com.github.javaparser.ast.Modifier>)
QUALIFIER: com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper [JavaParserConstructorDeclaration.java <75:16 75:21>]
SYMBOL_METHOD: java.util.EnumSet<com.github.javaparser.ast.Modifier> com.github.javaparser.ast.body.CallableDeclaration<T>.getModifiers()
SYMBOL_METHOD: public java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() [JavaParserConstructorDeclaration.java <78:5 <78:5 <79:43 79:59> 79:61> 81:5>]
SYMBOL_METHOD: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters()
SYMBOL_METHOD: R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>)
SYMBOL_METHOD: java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>)
SYMBOL_METHOD: java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream()
SYMBOL_METHOD: com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getTypeParameters()
SYMBOL_METHOD: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver)
SYMBOL_METHOD: static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>()
REFERENCE_IMPORT: JavaParserConstructorDeclaration.java -> com.github.javaparser.symbolsolver.model.declarations [JavaParserConstructorDeclaration.java <19:49 19:60>]
REFERENCE_IMPORT: JavaParserConstructorDeclaration.java -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserConstructorDeclaration.java <20:60 20:69>]
REFERENCE_IMPORT: JavaParserConstructorDeclaration.java -> java.util.List<E> [JavaParserConstructorDeclaration.java <22:18 22:21>]
REFERENCE_IMPORT: JavaParserConstructorDeclaration.java -> java.util.stream.Collectors [JavaParserConstructorDeclaration.java <23:25 23:34>]
REFERENCE_INHERITANCE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration -> com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration [JavaParserConstructorDeclaration.java <28:58 28:79>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.classDeclaration -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [JavaParserConstructorDeclaration.java <30:13 30:28>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode -> com.github.javaparser.ast.body.ConstructorDeclaration [JavaParserConstructorDeclaration.java <31:44 31:65>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.typeSolver -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserConstructorDeclaration.java <32:13 32:22>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [JavaParserConstructorDeclaration.java <34:45 34:60>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ConstructorDeclaration [JavaParserConstructorDeclaration.java <34:111 34:132>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver [JavaParserConstructorDeclaration.java <35:45 35:54>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.classDeclaration [JavaParserConstructorDeclaration.java <36:14 36:29>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <37:14 37:24>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration(com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration, com.github.javaparser.ast.body.ConstructorDeclaration, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.typeSolver [JavaParserConstructorDeclaration.java <38:14 38:23>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.model.declarations.ConstructorDeclaration.declaringType() [JavaParserConstructorDeclaration.java <42:29 42:41>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.declaringType() -> java.lang.Override [JavaParserConstructorDeclaration.java <41:6 41:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration [JavaParserConstructorDeclaration.java <42:12 42:27>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.declaringType() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.classDeclaration [JavaParserConstructorDeclaration.java <43:16 43:31>]
REFERENCE_OVERRIDE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() -> int com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getNumberOfParams() [JavaParserConstructorDeclaration.java <47:16 47:32>]
REFERENCE_ANNOTATION_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() -> java.lang.Override [JavaParserConstructorDeclaration.java <46:6 46:13>]
REFERENCE_TYPE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() -> int [JavaParserConstructorDeclaration.java <47:12 47:14>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() -> int com.github.javaparser.ast.NodeList<N>.size() [JavaParserConstructorDeclaration.java <48:49 48:52>]
REFERENCE_CALL: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getParameters() [JavaParserConstructorDeclaration.java <48:33 48:45>]
REFERENCE_USAGE: int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() -> com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <48:21 48:31>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.model.declarations.MethodLikeDeclaration.getParam(int) [JavaParserConstructorDeclaration.java <52:33 52:40>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> java.lang.Override [JavaParserConstructorDeclaration.java <51:6 51:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration [JavaParserConstructorDeclaration.java <52:12 52:31>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> int [JavaParserConstructorDeclaration.java <52:42 52:44>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() [JavaParserConstructorDeclaration.java <53:27 53:43>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> int com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getNumberOfParams() [JavaParserConstructorDeclaration.java <54:113 54:129>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String) [JavaParserConstructorDeclaration.java <54:23 54:46>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> java.lang.IllegalArgumentException [JavaParserConstructorDeclaration.java <54:23 54:46>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> static java.lang.String java.lang.String.format(java.lang.String, java.lang.Object) [JavaParserConstructorDeclaration.java <54:55 54:60>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration.JavaParserParameterDeclaration(com.github.javaparser.ast.body.Parameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserConstructorDeclaration.java <56:20 56:49>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclaration [JavaParserConstructorDeclaration.java <56:20 56:49>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.ast.NodeList<N>.N com.github.javaparser.ast.NodeList<N>.get(int) [JavaParserConstructorDeclaration.java <56:79 56:81>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.body.Parameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getParameters() [JavaParserConstructorDeclaration.java <56:63 56:75>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <56:51 56:61>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.ParameterDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam(int) -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.typeSolver [JavaParserConstructorDeclaration.java <56:87 56:96>]
REFERENCE_OVERRIDE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [JavaParserConstructorDeclaration.java <60:19 60:25>]
REFERENCE_ANNOTATION_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getName() -> java.lang.Override [JavaParserConstructorDeclaration.java <59:6 59:13>]
REFERENCE_TYPE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getName() -> java.lang.String [JavaParserConstructorDeclaration.java <60:12 60:17>]
REFERENCE_CALL: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getName() -> java.lang.String com.github.javaparser.symbolsolver.model.declarations.Declaration.getName() [JavaParserConstructorDeclaration.java <61:38 61:44>]
REFERENCE_USAGE: java.lang.String com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getName() -> com.github.javaparser.symbolsolver.model.declarations.ClassDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.classDeclaration [JavaParserConstructorDeclaration.java <61:21 61:36>]
REFERENCE_TYPE_USAGE: com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getWrappedNode() -> com.github.javaparser.ast.body.ConstructorDeclaration [JavaParserConstructorDeclaration.java <69:43 69:64>]
REFERENCE_USAGE: com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getWrappedNode() -> com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <70:16 70:26>]
REFERENCE_OVERRIDE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.model.declarations.HasAccessLevel.accessLevel() [JavaParserConstructorDeclaration.java <74:24 74:34>]
REFERENCE_ANNOTATION_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() -> java.lang.Override [JavaParserConstructorDeclaration.java <73:6 73:13>]
REFERENCE_TYPE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() -> com.github.javaparser.symbolsolver.model.declarations.AccessLevel [JavaParserConstructorDeclaration.java <74:12 74:22>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() -> static com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.Helper.toAccessLevel(java.util.EnumSet<com.github.javaparser.ast.Modifier>) [JavaParserConstructorDeclaration.java <75:23 75:35>]
REFERENCE_CALL: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() -> java.util.EnumSet<com.github.javaparser.ast.Modifier> com.github.javaparser.ast.body.CallableDeclaration<T>.getModifiers() [JavaParserConstructorDeclaration.java <75:49 75:60>]
REFERENCE_USAGE: com.github.javaparser.symbolsolver.model.declarations.AccessLevel com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.accessLevel() -> com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <75:37 75:47>]
REFERENCE_OVERRIDE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.model.declarations.TypeParametrizable.getTypeParameters() [JavaParserConstructorDeclaration.java <79:43 79:59>]
REFERENCE_ANNOTATION_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> java.lang.Override [JavaParserConstructorDeclaration.java <78:6 78:13>]
REFERENCE_TYPE_ARGUMENT: java.util.List<E> -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserConstructorDeclaration.java <79:17 79:40>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> java.util.List<E> [JavaParserConstructorDeclaration.java <79:12 79:15>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration [JavaParserConstructorDeclaration.java <79:17 79:40>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> R java.util.stream.Stream<T>.collect<R, A>(java.util.stream.Collector<? super T, A, R>) [JavaParserConstructorDeclaration.java <80:125 80:131>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> java.util.stream.Stream<R> java.util.stream.Stream<T>.map<R>(java.util.function.Function<? super T, ? extends R>) [JavaParserConstructorDeclaration.java <80:62 80:64>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> java.util.stream.Stream<java.util.Collection<E>.E> java.util.Collection<E>.stream() [JavaParserConstructorDeclaration.java <80:53 80:58>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> com.github.javaparser.ast.NodeList<com.github.javaparser.ast.type.TypeParameter> com.github.javaparser.ast.body.CallableDeclaration<T>.getTypeParameters() [JavaParserConstructorDeclaration.java <80:33 80:49>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> com.github.javaparser.ast.body.ConstructorDeclaration com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.wrappedNode [JavaParserConstructorDeclaration.java <80:21 80:31>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter.JavaParserTypeParameter(com.github.javaparser.ast.type.TypeParameter, com.github.javaparser.symbolsolver.model.resolution.TypeSolver) [JavaParserConstructorDeclaration.java <80:81 80:103>]
REFERENCE_TYPE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameter [JavaParserConstructorDeclaration.java <80:81 80:103>]
REFERENCE_USAGE: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> com.github.javaparser.symbolsolver.model.resolution.TypeSolver com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.typeSolver [JavaParserConstructorDeclaration.java <80:112 80:121>]
REFERENCE_CALL: java.util.List<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration> com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getTypeParameters() -> static java.util.stream.Collector<T, ?, java.util.List<T>> java.util.stream.Collectors.toList<T>() [JavaParserConstructorDeclaration.java <80:144 80:149>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<28:81> [JavaParserConstructorDeclaration.java <28:81 28:81>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<28:81> [JavaParserConstructorDeclaration.java <82:1 82:1>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<35:68> [JavaParserConstructorDeclaration.java <35:68 35:68>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<35:68> [JavaParserConstructorDeclaration.java <39:5 39:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<42:45> [JavaParserConstructorDeclaration.java <42:45 42:45>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<42:45> [JavaParserConstructorDeclaration.java <44:5 44:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<47:36> [JavaParserConstructorDeclaration.java <47:36 47:36>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<47:36> [JavaParserConstructorDeclaration.java <49:5 49:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<52:49> [JavaParserConstructorDeclaration.java <52:49 52:49>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<52:49> [JavaParserConstructorDeclaration.java <57:5 57:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<53:48> [JavaParserConstructorDeclaration.java <53:48 53:48>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<53:48> [JavaParserConstructorDeclaration.java <55:9 55:9>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<60:29> [JavaParserConstructorDeclaration.java <60:29 60:29>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<60:29> [JavaParserConstructorDeclaration.java <62:5 62:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<69:83> [JavaParserConstructorDeclaration.java <69:83 69:83>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<69:83> [JavaParserConstructorDeclaration.java <71:5 71:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<74:38> [JavaParserConstructorDeclaration.java <74:38 74:38>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<74:38> [JavaParserConstructorDeclaration.java <76:5 76:5>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<79:63> [JavaParserConstructorDeclaration.java <79:63 79:63>]
LOCAL_SYMBOL: JavaParserConstructorDeclaration.java<79:63> [JavaParserConstructorDeclaration.java <81:5 81:5>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration<0> [JavaParserConstructorDeclaration.java <34:62 34:77>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration<0> [JavaParserConstructorDeclaration.java <36:33 36:48>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration<1> [JavaParserConstructorDeclaration.java <34:134 34:144>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration<1> [JavaParserConstructorDeclaration.java <37:28 37:38>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration<2> [JavaParserConstructorDeclaration.java <35:56 35:65>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.JavaParserConstructorDeclaration<2> [JavaParserConstructorDeclaration.java <38:27 38:36>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam<0> [JavaParserConstructorDeclaration.java <52:46 52:46>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam<0> [JavaParserConstructorDeclaration.java <53:13 53:13>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam<0> [JavaParserConstructorDeclaration.java <53:22 53:22>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam<0> [JavaParserConstructorDeclaration.java <54:110 54:110>]
LOCAL_SYMBOL: com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserConstructorDeclaration.getParam<0> [JavaParserConstructorDeclaration.java <56:83 56:83>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserConstructorDeclaration.java <80:67 80:71>]
LOCAL_SYMBOL: java.util.function.Function<T, R>.apply<1> [JavaParserConstructorDeclaration.java <80:105 80:109>]
COMMENT: comment [JavaParserConstructorDeclaration.java <1:1 15:3>]
COMMENT: comment [JavaParserConstructorDeclaration.java <25:1 27:3>]
COMMENT: comment [JavaParserConstructorDeclaration.java <64:5 68:7>]
